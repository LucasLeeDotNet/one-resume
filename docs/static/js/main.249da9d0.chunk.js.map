{"version":3,"sources":["serviceWorker.ts","manifest.ts","context/initialState.ts","models/GenericSnackbarModel.ts","context/reducers.ts","context/StoreContext.js","components/IntroComponent/IntroComponent.tsx","components/SkillsComponent/SkillComponent.tsx","models/SkillModel.ts","components/SkillsComponent/SkillsComponent.tsx","components/dialogs/ExportDialogComponent/ExportDialogComponent.tsx","components/HeaderComponent/HeaderComponent.tsx","models/ExperienceModel.ts","components/ExperiencesComponent/ExperienceComponent.tsx","components/ExperiencesComponent/ExperiencesComponent.tsx","components/snackbars/GenericSnackbarComponent.tsx","App.tsx","index.tsx","context/actions.ts"],"names":["Boolean","window","location","hostname","match","manifest","intro","name","position","statement","skills","level","interest","icon","lastUsed","id","experiences","company","date","bulletPoints","point","initialState","Object","objectSpread","editMode","map","experience","uuid","genericSnackbar","open","hideDuration","message","printMode","skill","selectedExperience","selectedSkill","types","HIDE_GENERIC_SNACKBAR","SELECT_EXPERIENCE","SELECT_SKILL","SHOW_GENERIC_SNACKBAR","TOGGLE_EDIT","TOGGLE_PRINT","UPDATE_EXPERIENCE","UPDATE_NAME","UPDATE_POSITION","UPDATE_SKILL","UPDATE_STATEMENT","reducer","state","arguments","length","undefined","action","type","Error","StoreContext","createContext","IntroComponent","props","_useContext","useContext","dispatch","_state$intro","actions","useEffect","toggleStatementEditMode","togglePositionEditMode","toggleNameEditMode","_useState","useState","_useState2","slicedToArray","statementEditMode","_useState3","_useState4","positionEditMode","_useState5","_useState6","nameEditMode","react_default","a","createElement","className","index_es","color","aria-label","onClick","Check_default","label","InputLabelProps","shrink","onChange","event","target","value","fullWidth","multiline","margin","style","variant","SkillComponent","handleDeleteSkill","handleUpdateSkill","newFlag","onSelectSkill","nameEdit","handleEditName","levelEdit","handleEditLevel","interestEdit","handleEditInterest","_useState7","_useState8","lastUsedEdit","handleEditLastUsed","_useState9","_useState10","iconEdit","handleEditIcon","brandIconSet","brandIcons","faIcon","handleResetSkill","stopPropagation","Add_default","key","react_fontawesome_index_es","Number","htmlFor","inputProps","size","Clear_default","DeleteForever_default","SkillModel","SkillsComponent","newSkill","updateSkill","handleSelectSkill","components_SkillsComponent_SkillComponent","assign","deleteSkill","ExportDialogComponent","openState","onClose","exportPrefix","aria-labelledby","aria-describedby","JSON","stringify","navigator","clipboard","writeText","then","snackbar","autoFocus","HeaderComponent","exportModalState","toggleExportModal","handlePrintModeToggle","Print_default","handlePrintPdf","Description_default","ImportExport_default","Edit_default","Visibility_default","ExportDialogComponent_ExportDialogComponent_ExportDialogComponent","BulletModel","classCallCheck","this","ExperienceModel","ExperienceComponent","handleDeleteExperience","handleUpdateExperience","handleSelectExperience","companyEdit","handleEditCompany","toUpperCase","dateEdit","handleEditDate","positionEdit","handleEditPosition","bulletPointsEdit","handleEditBulletPoints","skillsMapByName","reduce","result","defineProperty","index","newBulletPoints","toConsumableArray","handleEditBulletPoint","IconButton_default","_id","filter","item","handleDeleteBulletPoint","Delete_default","concat","handleAddNewSkill","skillName","skillIndex","skillObject","ExperiencesComponent","updateExperience","components_ExperiencesComponent_ExperienceComponent","deleteExperience","GenericSnackbarComponent","handleClose","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","Close_default","App","components_HeaderComponent_HeaderComponent","components_IntroComponent_IntroComponent","components_SkillsComponent_SkillsComponent","components_ExperiencesComponent_ExperiencesComponent","snackbars_GenericSnackbarComponent","ReactDOM","render","_ref","children","_useReducer","useReducer","_useReducer2","newExperiences","newSkills","$content","document","querySelector","querySelectorAll","forEach","display","html2pdf","filename","image","quality","enableLinks","html2canvas","onrendered","dpi","letterRendering","width","jsPDF","unit","format","orientation","_experience","_skill","useActions","Provider","src_App_0","getElementById","library","add","faStroopwafel","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.249da9d0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\n  /**\r\n   * Replace the content of this file (/src/manifest.ts) with the manifest data copied by the export button\r\n   */\r\n  import ManifestModel from './models/ManifestModel';\r\n  \r\n  export const manifest:ManifestModel = {\r\n    \"intro\": {\r\n        \"name\": \"Lucas Lee\",\r\n        \"position\": \"Javascript / Frontend / Web Developer\",\r\n        \"statement\": \"Passionate about Javascript, specializing in rapid development with strong sense of design. Lead frontend development on a new marketing platform for EAB. Experienced with a wide range of skillset that extends from frontend frameworks to containerized Devops and AWS.\"\r\n    },\r\n    \"skills\": [\r\n        {\r\n            \"name\": \"Javascript\",\r\n            \"level\": 8.5,\r\n            \"interest\": \"Highest\",\r\n            \"icon\": \"Js\",\r\n            \"lastUsed\": \"Current\",\r\n            \"id\": \"db453c01-782a-4763-aaa2-f85471e6e755\"\r\n        },\r\n        {\r\n            \"name\": \"Typescript\",\r\n            \"level\": 7,\r\n            \"interest\": \"High\",\r\n            \"icon\": \"\",\r\n            \"lastUsed\": \"Current\",\r\n            \"id\": \"c7c4af10-754d-4dfa-aba2-b50071ff69e1\"\r\n        },\r\n        {\r\n            \"name\": \"React\",\r\n            \"level\": 7,\r\n            \"interest\": \"High\",\r\n            \"icon\": \"React\",\r\n            \"lastUsed\": \"Current\",\r\n            \"id\": \"bda1777a-e58b-4cad-88f9-131b727e7908\"\r\n        },\r\n        {\r\n            \"name\": \"Angular\",\r\n            \"level\": 7.5,\r\n            \"interest\": \"High\",\r\n            \"icon\": \"Angular\",\r\n            \"lastUsed\": \"This Month\",\r\n            \"id\": \"9534b167-e254-44ee-b185-89ae758dede0\"\r\n        },\r\n        {\r\n            \"name\": \"Node.js\",\r\n            \"level\": 7.5,\r\n            \"interest\": \"High\",\r\n            \"icon\": \"Node\",\r\n            \"lastUsed\": \"This Month\",\r\n            \"id\": \"4861eb41-95ef-4a9e-8048-4d32ec68b251\"\r\n        },\r\n        {\r\n            \"name\": \"Docker\",\r\n            \"level\": 7,\r\n            \"interest\": \"High\",\r\n            \"icon\": \"Docker\",\r\n            \"lastUsed\": \"Current\",\r\n            \"id\": \"8a012583-f0e3-426f-8146-eb6770629b32\"\r\n        },\r\n        {\r\n            \"name\": \"AWS\",\r\n            \"level\": 6,\r\n            \"interest\": \"High\",\r\n            \"icon\": \"Aws\",\r\n            \"lastUsed\": \"Current\",\r\n            \"id\": \"f664efe9-5ae6-450f-b14f-bf76c79b6f74\"\r\n        },\r\n        {\r\n            \"name\": \"React Native\",\r\n            \"level\": 6,\r\n            \"interest\": \"High\",\r\n            \"icon\": \"React\",\r\n            \"lastUsed\": \"Before This Year\",\r\n            \"id\": \"91e796cd-37a4-4808-8cb1-227969361adc\"\r\n        },\r\n        {\r\n            \"name\": \"MongoDB\",\r\n            \"level\": 5,\r\n            \"interest\": \"Moderate\",\r\n            \"icon\": \"\",\r\n            \"lastUsed\": \"This Year\",\r\n            \"id\": \"c07934a4-38ee-4968-be3b-987032a8adec\"\r\n        },\r\n        {\r\n            \"name\": \"SQL\",\r\n            \"level\": 5,\r\n            \"interest\": \"Moderate\",\r\n            \"icon\": \"\",\r\n            \"lastUsed\": \"This Year\",\r\n            \"id\": \"4cc7e206-1140-459c-aebf-28edc7306149\"\r\n        },\r\n        {\r\n            \"name\": \"Photoshop\",\r\n            \"level\": 7,\r\n            \"interest\": \"Moderate\",\r\n            \"icon\": \"Adobe\",\r\n            \"lastUsed\": \"This Month\",\r\n            \"id\": \"1dc76787-d9cc-407c-ac0c-bd54d48db842\"\r\n        },\r\n        {\r\n            \"name\": \"Java\",\r\n            \"level\": 4,\r\n            \"interest\": \"Moderate\",\r\n            \"icon\": \"Java\",\r\n            \"lastUsed\": \"Before This Year\",\r\n            \"id\": \"e82b927d-1e18-4771-9dcc-98abb9711da2\"\r\n        },\r\n        {\r\n            \"name\": \"JQuery\",\r\n            \"level\": 7.5,\r\n            \"interest\": \"Low\",\r\n            \"icon\": \"Js\",\r\n            \"lastUsed\": \"This Year\",\r\n            \"id\": \"258e5634-dfd7-43e9-90dc-e568200e53f5\"\r\n        },\r\n        {\r\n            \"name\": \"Coldfusion\",\r\n            \"level\": 6,\r\n            \"interest\": \"Low\",\r\n            \"icon\": \"\",\r\n            \"lastUsed\": \"This Year\",\r\n            \"id\": \"9a788c8f-7ede-4f6d-ac4c-5524648bc666\"\r\n        },\r\n        {\r\n            \"id\": \"43a9a2f5-bb5f-4047-a485-6f71fc1a3cb3\",\r\n            \"icon\": \"\",\r\n            \"name\": \"CSS/SASS\",\r\n            \"level\": 7,\r\n            \"interest\": \"High\",\r\n            \"lastUsed\": \"Current\"\r\n        },\r\n        {\r\n            \"id\": \"71657f6c-3fc8-48f7-9e69-7061d3051646\",\r\n            \"icon\": \"Angular\",\r\n            \"name\": \"AngularJS\",\r\n            \"level\": 7.5,\r\n            \"interest\": \"Moderate\",\r\n            \"lastUsed\": \"Before This Year\"\r\n        }\r\n    ],\r\n    \"experiences\": [\r\n        {\r\n            \"id\": \"362c670d-db68-4052-80fa-8624cadd299f\",\r\n            \"company\": \"EAB Richmond\",\r\n            \"date\": \"MAY 2015 - PRESENT\",\r\n            \"position\": \"Senior Web Developer\",\r\n            \"bulletPoints\": [\r\n                {\r\n                    \"point\": \"Currently leading frontend development for the new Marketing Platform\",\r\n                    \"skills\": [\r\n                        \"React\",\r\n                        \"Javascript\",\r\n                        \"Typescript\",\r\n                        \"Node.js\",\r\n                        \"Docker\",\r\n                        \"AWS\",\r\n                        \"MongoDB\",\r\n                        \"CSS/SASS\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"point\": \"Lead frontend development for adding Stripe payment system to handle live student application payments \",\r\n                    \"skills\": [\r\n                        \"Javascript\",\r\n                        \"Coldfusion\",\r\n                        \"JQuery\",\r\n                        \"CSS/SASS\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"point\": \"Individual project, creating a responsive ad tools for generating google ad previews for routing to clients\",\r\n                    \"skills\": [\r\n                        \"Angular\",\r\n                        \"Typescript\",\r\n                        \"Javascript\",\r\n                        \"CSS/SASS\",\r\n                        \"Docker\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"point\": \"Collaborate on the project to create a budget management tool for calculating estimated cost of display ad for business clients\",\r\n                    \"skills\": [\r\n                        \"Javascript\",\r\n                        \"React\",\r\n                        \"CSS/SASS\",\r\n                        \"MongoDB\",\r\n                        \"Node.js\",\r\n                        \"Docker\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"point\": \"Lead frontend development for creating a platform for sending out SMS to large volume of Students\",\r\n                    \"skills\": [\r\n                        \"Javascript\",\r\n                        \"Coldfusion\",\r\n                        \"JQuery\",\r\n                        \"CSS/SASS\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"point\": \"Lead frontend development for adding Google Drive upload to Student Admission Application\",\r\n                    \"skills\": [\r\n                        \"Javascript\",\r\n                        \"Coldfusion\",\r\n                        \"CSS/SASS\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"point\": \"Lead frontend development for adding a passwordless login system for Student Application\",\r\n                    \"skills\": [\r\n                        \"Javascript\",\r\n                        \"Coldfusion\",\r\n                        \"CSS/SASS\",\r\n                        \"JQuery\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"point\": \"Created the frontend for the code review web tool that became the defacto code review tool for the department\",\r\n                    \"skills\": [\r\n                        \"Javascript\",\r\n                        \"JQuery\",\r\n                        \"Coldfusion\",\r\n                        \"CSS/SASS\"\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"id\": \"2a84c08d-796b-479b-85d7-81a297acea2e\",\r\n            \"company\": \"Point of Sales System for UMI Sushi Bistro, Short Pump\",\r\n            \"date\": \"NOV 2014 - MAY 2015\",\r\n            \"position\": \"Freelance\",\r\n            \"bulletPoints\": [\r\n                {\r\n                    \"point\": \"Built a AngularJS Touch based POS system that has been in used to serve customer for the last 4 years\",\r\n                    \"skills\": [\r\n                        \"AngularJS\",\r\n                        \"Javascript\",\r\n                        \"Node.js\",\r\n                        \"MongoDB\",\r\n                        \"Photoshop\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"point\": \"Provided functionality for reporting, ordering using a touch interface, table editor, split check payment, orders/receipt printing and menu creation\",\r\n                    \"skills\": []\r\n                },\r\n                {\r\n                    \"point\": \"Still currently live in production in 2019\",\r\n                    \"skills\": []\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"id\": \"4906cfa4-febf-4120-9cca-da32b926b2a3\",\r\n            \"company\": \"Shockoe | Mobile by Design\",\r\n            \"date\": \"MAR 2014 - NOV 2014\",\r\n            \"position\": \"Mobile Application Developer\",\r\n            \"bulletPoints\": [\r\n                {\r\n                    \"point\": \"Built mobile application using a Javascript Platform (Appcelerator)\",\r\n                    \"skills\": [\r\n                        \"Javascript\",\r\n                        \"Node.js\",\r\n                        \"Photoshop\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"point\": \"Built Full Stack Web Application with node\",\r\n                    \"skills\": [\r\n                        \"Javascript\",\r\n                        \"Node.js\",\r\n                        \"MongoDB\",\r\n                        \"CSS/SASS\",\r\n                        \"Photoshop\"\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"id\": \"706a7710-1b5e-4029-b1f6-8dbdf5a71db6\",\r\n            \"company\": \"Virginia Commonwealth University\",\r\n            \"date\": \"2009 - 2013\",\r\n            \"position\": \"Computer Science, Bachelor's Degree\",\r\n            \"bulletPoints\": []\r\n        }\r\n    ]\r\n}","//Manifest\r\nimport { manifest } from \"../manifest\";\r\n\r\n//Model\r\nimport ExperienceModel from \"../models/ExperienceModel\";\r\nimport GenericSnackbarModel from \"../models/GenericSnackbarModel\";\r\nimport SkillModel from \"../models/SkillModel\";\r\nimport { StateModel } from \"../models/StateModel\";\r\n\r\n//Utility\r\nimport uuid from 'uuid/v4';\r\n\r\nexport const initialState: StateModel = { \r\n    ...manifest, \r\n    editMode: false,\r\n    experiences: manifest.experiences.map( ( experience:ExperienceModel ) => { return { ...experience, id: uuid() }} ),\r\n    genericSnackbar: new GenericSnackbarModel(),\r\n    printMode: false,\r\n    skills: manifest.skills.map( ( skill:SkillModel ) => { return { ...skill, id: uuid() }} ),\r\n    selectedExperience: '',\r\n    selectedSkill: '',\r\n};\r\n","export default class GenericSnackbarModel{ \r\n  open: boolean = false;\r\n  hideDuration: number = 2000;\r\n  message: string = ''\r\n}","//Model\r\nimport { initialState } from './initialState';\r\nimport { StateModel } from '../models/StateModel';\r\n\r\n\r\nconst types = {\r\n    HIDE_GENERIC_SNACKBAR: 'HIDE_GENERIC_SNACKBAR',\r\n    SELECT_EXPERIENCE: 'SELECT_EXPERIENCE',\r\n    SELECT_SKILL: 'SELECT_SKILL',\r\n    SHOW_GENERIC_SNACKBAR: 'SHOW_GENERIC_SNACKBAR',\r\n    TOGGLE_EDIT: 'TOGGLE_EDIT',\r\n    TOGGLE_PRINT: 'TOGGLE_PRINT',\r\n    UPDATE_EXPERIENCE: 'UPDATE_EXPERIENCE',\r\n    UPDATE_NAME: 'UPDATE_NAME',\r\n    UPDATE_POSITION: 'UPDATE_POSITION',\r\n    UPDATE_SKILL: 'UPDATE_SKILL',\r\n    UPDATE_STATEMENT: 'UPDATE_STATEMENT',\r\n};\r\n\r\nconst reducer = (state:StateModel = initialState, action:any ):StateModel => {\r\n\r\n  switch (action.type) {\r\n        /**\r\n         * Hide the generic snackbar\r\n         */\r\n        case types.HIDE_GENERIC_SNACKBAR:\r\n          return { \r\n            ...state,\r\n            genericSnackbar: { \r\n              ...state.genericSnackbar,\r\n              open: false\r\n            }\r\n          }\r\n\r\n        /**\r\n         * Select a experience with mouse click in edit mode\r\n         */\r\n        case types.SELECT_EXPERIENCE:\r\n        return {\r\n            ...state,\r\n            selectedExperience: action.selectedExperience,\r\n            selectedSkill: ''\r\n        }\r\n\r\n        /**\r\n         * Select a skill with mouse click\r\n         */\r\n        case types.SELECT_SKILL:\r\n            return {\r\n                ...state,\r\n                selectedSkill: action.selectedSkill,\r\n                selectedExperience: ''\r\n            }\r\n\r\n        /**\r\n         * Show the generic snackbar\r\n         */\r\n        case types.SHOW_GENERIC_SNACKBAR:\r\n        return { \r\n          ...state,\r\n          genericSnackbar: { \r\n            ...state.genericSnackbar,\r\n            open: true,\r\n            hideDuration: action.hideDuration || state.genericSnackbar.hideDuration,\r\n            message: action.message\r\n          }\r\n        }\r\n\r\n        /**\r\n         * Toggle global edit mode\r\n         */\r\n        case types.TOGGLE_EDIT:\r\n            return {\r\n                ...state,\r\n                editMode: action.editMode,\r\n                intro: {\r\n                    ...state.intro,\r\n                }, \r\n                selectedSkill: state.editMode === true ? '' : state.selectedSkill\r\n            }\r\n\r\n        /**\r\n         * Toggle element adjustment to enable the page for print\r\n         */\r\n        case types.TOGGLE_PRINT:\r\n        return {\r\n            ...state,\r\n            printMode: action.printMode\r\n        }\r\n\r\n                /**\r\n         * Update a particular experience\r\n         */\r\n        case types.UPDATE_EXPERIENCE:\r\n        return { \r\n            ...state,\r\n            experiences: action.experiences,\r\n            selectedExperience: action.selectedExperience || ''\r\n        }\r\n\r\n        /**\r\n         * Update the name Field\r\n         */\r\n        case types.UPDATE_NAME:\r\n            return {\r\n                ...state,\r\n                intro: {\r\n                    ...state.intro,\r\n                    name: action.name\r\n                }\r\n            }\r\n\r\n        /**\r\n         * Update the position field\r\n         */\r\n        case types.UPDATE_POSITION:\r\n            return {\r\n                ...state,\r\n                intro: {\r\n                    ...state.intro,\r\n                    position: action.position\r\n                }\r\n            }\r\n        \r\n        /**\r\n         * Update a particular skill\r\n         */\r\n        case types.UPDATE_SKILL:\r\n            return { \r\n                ...state,\r\n                skills: action.skills,\r\n                selectedSkill: ''\r\n            }\r\n        \r\n\r\n        /**\r\n         * Update the statement field\r\n         */\r\n        case types.UPDATE_STATEMENT:\r\n            return {\r\n                ...state,\r\n                intro: {\r\n                    ...state.intro,\r\n                    statement: action.statement\r\n                }\r\n            }\r\n        default:\r\n            throw new Error('Unexpected action');\r\n    }\r\n};\r\n\r\nexport {\r\n    initialState,\r\n    types,\r\n    reducer\r\n};","//React\r\nimport React, { createContext, useReducer } from \"react\";\r\n\r\n//Context\r\nimport { useActions } from \"./actions\";\r\nimport { reducer } from \"./reducers\";\r\n\r\n//Model\r\nimport { initialState } from './initialState';\r\n\r\nconst StoreContext = createContext(initialState);\r\n\r\nconst StoreProvider = ({ children }) => {\r\n  // Set up reducer with useReducer and our defined reducer, initialState from reducers.js\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  // Create an object of all our actions, handling special cases where a simple dispatch is too primitive\r\n  const actions = useActions(state, dispatch);\r\n\r\n  // Render state, dispatch and special case actions\r\n  return (\r\n    <StoreContext.Provider value={{ state, dispatch, actions }}>\r\n      {children}\r\n    </StoreContext.Provider>\r\n  );\r\n};\r\n\r\nexport { StoreContext, StoreProvider };\r\n","//React\r\nimport React, { useState, useContext, useEffect, ChangeEvent } from 'react';\r\n\r\n//Context\r\nimport { StoreContext } from '../../context/StoreContext';\r\nimport { types } from '../../context/reducers';\r\n\r\n//Material UI\r\nimport { Fab, TextField } from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\n//Model\r\nimport IntroModel from '../../models/IntroModel';\r\n\r\n//Style\r\nimport './IntroComponent.scss';\r\n\r\nexport interface IntroComponentProps {}\r\n\r\nconst IntroComponent = ( props: IntroComponentProps )=> { \r\n    const { state, dispatch, actions } = useContext(StoreContext);\r\n    const { position, name, statement }: IntroModel = state.intro;\r\n    const editMode: boolean = state.editMode;\r\n    \r\n    /**\r\n     * If editMode is off, ensure local edit state are turned off\r\n     */\r\n    useEffect( ()=>{ \r\n        if ( !editMode ){ \r\n            toggleStatementEditMode( false );\r\n            togglePositionEditMode( false );\r\n            toggleNameEditMode( false );\r\n        }\r\n    });\r\n    \r\n    //:ocal state\r\n    const [ statementEditMode, toggleStatementEditMode ] = useState( false );\r\n    const [ positionEditMode, togglePositionEditMode ] = useState( false );\r\n    const [ nameEditMode, toggleNameEditMode ] = useState( false );\r\n    \r\n    //Simple update handlers\r\n    const handleStatementChange = ( event:ChangeEvent<HTMLInputElement> ) => { \r\n        dispatch( \r\n            { \r\n                type: types.UPDATE_STATEMENT,\r\n                statement: event.target.value\r\n            }\r\n        );\r\n    };\r\n\r\n    const handlePositionChange = ( event:ChangeEvent<HTMLInputElement> ) => { \r\n        dispatch( \r\n            { \r\n                type: types.UPDATE_POSITION,\r\n                position: event.target.value\r\n            }\r\n        );\r\n    }\r\n\r\n    const handleNameChange = ( event:ChangeEvent<HTMLInputElement> ) => { \r\n        dispatch( \r\n            { \r\n                type: types.UPDATE_NAME,\r\n                name: event.target.value\r\n            }\r\n        );\r\n    }\r\n\r\n    return ( \r\n        <div className=\"intro\">\r\n            {/* Name \r\n                --------\r\n            */}\r\n            <div className={'name' + (nameEditMode && editMode ? ' extra-margin': '') + (editMode && !nameEditMode ? ' edit-outline':'')}>\r\n                { \r\n                    /*  Check Button\r\n                        ------------\r\n                    */\r\n                    nameEditMode && editMode?\r\n                    <Fab className=\"edit-icon\" color=\"secondary\" aria-label=\"Edit\" onClick={ ()=> toggleNameEditMode( false )} >\r\n                        <CheckIcon/>\r\n                    </Fab>:undefined\r\n                }\r\n                { nameEditMode && editMode ? \r\n                    /*  Name Input\r\n                        ---------------\r\n                    */\r\n                    <TextField\r\n                        label=\"Edit Name\"\r\n                        className=\"name-input\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        onChange={ handleNameChange }\r\n                        value={name}\r\n                    />: \r\n                    /*  Name View Mode\r\n                        ------------------\r\n                    */  \r\n                    <div onClick={ ()=> editMode && toggleNameEditMode( !nameEditMode )}>\r\n                        <h1 className=\"name\">{name}</h1>\r\n                    </div>\r\n                }\r\n            </div>            \r\n            {/* Position \r\n                --------\r\n            */}\r\n            <div className={'position' + (positionEditMode && editMode ? ' extra-margin': '') + (editMode && !positionEditMode ? ' edit-outline':'')}>\r\n                { \r\n                    /*  Check Button\r\n                        ------------\r\n                    */\r\n                    positionEditMode && editMode?\r\n                    <Fab className=\"edit-icon\" color=\"secondary\" aria-label=\"Edit\" onClick={ ()=> togglePositionEditMode( false )} >\r\n                        <CheckIcon/>\r\n                    </Fab>:undefined\r\n                }\r\n                { positionEditMode && editMode ? \r\n                    /*  Position Input\r\n                        ---------------\r\n                    */\r\n                    <TextField\r\n                        label=\"Edit Position\"\r\n                        className=\"position-input\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        onChange={ handlePositionChange }\r\n                        value={position}\r\n                    />: \r\n                    /*  Position View Mode\r\n                        ------------------\r\n                    */  \r\n                    <div onClick={ ()=> editMode && togglePositionEditMode( !positionEditMode )}>\r\n                        {position}\r\n                    </div>\r\n                }\r\n            </div>\r\n            {/* Statement \r\n                --------\r\n            */}\r\n            <div className={'statement' + (statementEditMode && editMode ? ' extra-margin': '') + (editMode && !statementEditMode ? ' edit-outline':'')}>\r\n                { \r\n                    /*  Check Button\r\n                        ------------\r\n                    */\r\n                    statementEditMode && editMode ?\r\n                    <Fab className=\"edit-icon\" aria-label=\"Edit\" onClick={ ()=> toggleStatementEditMode( false )} >\r\n                        <CheckIcon/>\r\n                    </Fab>:undefined\r\n                }\r\n                { statementEditMode && editMode ? \r\n                    /*  Statement Input\r\n                        ---------------\r\n                    */\r\n                    <TextField\r\n                        label=\"Edit Statement\"\r\n                        fullWidth\r\n                        multiline\r\n                        className=\"statement-input\"\r\n                        margin=\"normal\"\r\n                        style={{ margin: 8 }}\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        onChange={ handleStatementChange }\r\n                        value={statement}\r\n                    />: \r\n                    /*  Statement View Mode\r\n                        -------------------\r\n                    */\r\n                    <div onClick={ ()=> editMode && toggleStatementEditMode( !statementEditMode )}>\r\n                        {statement}\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IntroComponent;","//React\r\nimport React, { useState, ChangeEvent } from 'react';\r\n\r\n//Material UI\r\nimport { \r\n  Fab,\r\n  FormControl,\r\n  InputLabel,\r\n  LinearProgress,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from '@material-ui/core'\r\nimport * as brandIcons from \"@fortawesome/free-brands-svg-icons\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\n//FontAwesome\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n//Model\r\nimport SkillModel from '../../models/SkillModel';\r\n\r\n//Style\r\nimport './SkillComponent.scss';\r\n\r\nexport interface SkillProps extends SkillModel{\r\n    editMode: boolean,\r\n    handleDeleteSkill?: Function,\r\n    handleUpdateSkill: Function, \r\n    newFlag?: boolean,\r\n    onSelectSkill: Function,\r\n    selectedSkill: string,\r\n}\r\n\r\nconst SkillComponent = ( props: SkillProps )=> { \r\n    const { icon,\r\n      editMode,\r\n      handleDeleteSkill,\r\n      handleUpdateSkill,\r\n      id,\r\n      interest,\r\n      lastUsed,\r\n      level,\r\n      name,\r\n      newFlag,\r\n      onSelectSkill,\r\n      selectedSkill,\r\n    } = props;\r\n    \r\n    const [ nameEdit, handleEditName ] = useState( name );\r\n    const [ levelEdit, handleEditLevel ] = useState( level );\r\n    const [ interestEdit, handleEditInterest ] = useState( interest );\r\n    const [ lastUsedEdit, handleEditLastUsed ] = useState( lastUsed );\r\n    const [ iconEdit, handleEditIcon ] = useState( icon );\r\n\r\n    //Reassigning the icon set to allow for dynamic input of icon names\r\n    const brandIconSet:any = brandIcons;\r\n    const faIcon = 'fa' + icon;\r\n    \r\n\r\n\r\n    /**\r\n     * Reset the skill by loading in the local state with the props\r\n     */\r\n    const handleResetSkill = ( event?: React.MouseEvent<HTMLElement> ):void => {\r\n        event && event.stopPropagation();\r\n\r\n        onSelectSkill( '' );\r\n        handleEditName( name ); \r\n        handleEditLevel( level );     \r\n        handleEditInterest( interest );     \r\n        handleEditLastUsed( lastUsed );     \r\n        handleEditIcon( icon ); \r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * Update Skill handler gathering edited data for the handleUpdateSkill callback\r\n     */\r\n    const _handleUpdateSkill = ( event: React.MouseEvent<HTMLElement> ):void => { \r\n        event.stopPropagation();\r\n        editMode && handleUpdateSkill( { \r\n            id,\r\n            icon: iconEdit, \r\n            name: nameEdit, \r\n            level: Number(levelEdit), \r\n            interest: interestEdit, \r\n            lastUsed: lastUsedEdit\r\n        } );\r\n        newFlag && handleResetSkill();\r\n    };\r\n\r\n    return ( \r\n        ( !newFlag || newFlag && editMode ) ? \r\n        <div className={'skill-container' + (editMode ? ' clickable' : '')} onClick={ ()=> editMode && onSelectSkill( selectedSkill !== id ? id : selectedSkill ) }>\r\n            { newFlag ?\r\n                <div className=\"add-button__container\">\r\n                    <AddIcon className=\"add-button\"/>\r\n                </div>:\r\n                /**\r\n                *   Static Preview of the skill\r\n                *   ---------------------------\r\n                */\r\n                [ <div className=\"icon-container\" key=\"iconContainer\">\r\n                    { icon !== '' ? <FontAwesomeIcon className=\"skill-icon\" icon={ brandIconSet[ faIcon ]}/> : ''}\r\n                </div>,\r\n                <div key=\"skillContainer\">\r\n                    <div className=\"skill-name\">{name}</div>\r\n                    <div className=\"skill-progress-container\">\r\n                        <div className=\"skill-row\"> <span className=\"skill-label\">Skill </span> <div className=\"spacer\"/>{level}/10 </div>\r\n                        <LinearProgress variant=\"determinate\" value={level/10*100} />\r\n                        <div className=\"skill-row\"> <span className=\"skill-label\">Interest </span> <div className=\"spacer\"/> {interest}</div>\r\n                        <div className=\"skill-row\"> <span className=\"skill-label\">Last used </span> <div className=\"spacer\"/> {lastUsed}</div>\r\n\r\n                    </div>\r\n                </div>]\r\n            }\r\n            { selectedSkill === id ? \r\n            <span className=\"input-container\">\r\n                {/**\r\n                *  Icon Input\r\n                *   ---------\r\n                */}\r\n                <TextField\r\n                    label=\"Edit Skill Icon\"\r\n                    className=\"text-input text-input--small\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={ (event:ChangeEvent<HTMLInputElement>)=>handleEditIcon(event.target.value) }\r\n                    value={iconEdit}\r\n                />\r\n                {/**\r\n                *   Skill Name Input\r\n                *   ----------------\r\n                */}\r\n                <TextField\r\n                    label=\"Edit Skill Name\"\r\n                    className=\"text-input\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={ (event:ChangeEvent<HTMLInputElement>)=>handleEditName(event.target.value) }\r\n                    value={nameEdit}\r\n                />\r\n                {/**\r\n                *   Skill Level Input\r\n                *   -----------------\r\n                */}\r\n                <TextField\r\n                    label=\"Edit Skill Level\"\r\n                    className=\"text-input text-input--small\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    onChange={ (event:ChangeEvent<HTMLInputElement>)=>handleEditLevel(Number(event.target.value)) }\r\n                    value={levelEdit}\r\n                />\r\n                {/**\r\n                *   Interest Select\r\n                *   ---------------\r\n                */}\r\n                <FormControl className=\"select-input\">\r\n                <InputLabel htmlFor=\"interest\">Interest</InputLabel>\r\n                <Select\r\n                    value={ interestEdit }\r\n                    onChange={(event:ChangeEvent<HTMLSelectElement>)=>handleEditInterest( event.target.value)}\r\n                    inputProps={{\r\n                    name: 'interest',\r\n                    id: 'interest',\r\n                    }}\r\n                    >\r\n                    <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value=\"Low\">Low</MenuItem>\r\n                    <MenuItem value=\"Moderate\">Moderate</MenuItem>\r\n                    <MenuItem value=\"High\">High</MenuItem>\r\n                    <MenuItem value=\"Highest\">Highest</MenuItem>\r\n                </Select>\r\n                </FormControl>\r\n                {/**\r\n                *   Last Used Select\r\n                *   ----------------\r\n                */}\r\n                <FormControl className=\"select-input\">\r\n                <InputLabel htmlFor=\"lastUsed\">Last Used</InputLabel>\r\n                <Select\r\n                    value={ lastUsedEdit }\r\n                    onChange={(event:ChangeEvent<HTMLSelectElement>)=>handleEditLastUsed( event.target.value)}\r\n                    inputProps={{\r\n                    name: 'lastUsed',\r\n                    id: 'lastUsed',\r\n                    }}\r\n                    >\r\n                    <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value=\"Current\">Current</MenuItem>\r\n                    <MenuItem value=\"This Month\">This Month</MenuItem>\r\n                    <MenuItem value=\"Last Month\">Last Month</MenuItem>\r\n                    <MenuItem value=\"This Year\">This Year</MenuItem>\r\n                    <MenuItem value=\"Before This Year\">Before This Year</MenuItem>\r\n                </Select>\r\n                </FormControl>\r\n                {/**\r\n                *   Action Buttons\r\n                *   --------------\r\n                */}\r\n                  <div className=\"action-button-container\">\r\n                  <Fab size=\"small\" className=\"check-button action-buttons\" aria-label=\"Edit\" onClick={ _handleUpdateSkill } >\r\n                      <CheckIcon/>\r\n                  </Fab>\r\n                  <Fab size=\"small\" aria-label=\"Edit action-buttons\" onClick={handleResetSkill} >\r\n                      <ClearIcon/>\r\n                  </Fab>\r\n                  { \r\n                    newFlag ? undefined:\r\n                    <Fab size=\"small\" className=\"delete-button action-buttons\" color=\"secondary\" aria-label=\"Delete\" onClick={() => handleDeleteSkill && handleDeleteSkill(id) } >\r\n                      <DeleteForeverIcon/>\r\n                    </Fab>                  \r\n                  }\r\n                </div>\r\n            </span>:undefined }\r\n\r\n        </div>:<div></div>\r\n    );  \r\n};\r\n\r\nexport default SkillComponent;","export default class SkillModel{ \r\n    name:  string ='';\r\n    level: number = 5;\r\n    interest: 'Low'|'Moderate'|'High'|'Highest'| string = 'High'; \r\n    lastUsed: 'Before This Year'|'This Year'|'Last Month'|'This Month'|'Current' | string = 'Current';\r\n    icon: string = '';\r\n    id?: string = \"new\";\r\n}","//React\r\nimport React, { useContext } from 'react';\r\n\r\n//Context\r\nimport { StoreContext } from '../../context/StoreContext';\r\nimport { types } from '../../context/reducers';\r\n\r\n//Component\r\nimport SkillComponent from './SkillComponent';\r\n\r\n//Model\r\nimport SkillModel from '../../models/SkillModel';\r\n\r\n//Style\r\nimport './SkillsComponent.scss'\r\n\r\nexport interface SkillsProps{}\r\n\r\nconst SkillsComponent = ( props: SkillsProps ) => { \r\n    const { state, dispatch, actions } = useContext(StoreContext);\r\n    const selectedSkill: string =  state.selectedSkill;\r\n    const editMode: boolean = state.editMode;\r\n    const skills: SkillModel[] = state.skills;\r\n    const newSkill = new SkillModel();\r\n\r\n    const handleUpdateSkill = ( skill: SkillModel ):void => { \r\n        actions.updateSkill( skill );\r\n    }\r\n\r\n    const handleSelectSkill = ( id: string ):void =>{ \r\n        dispatch( { \r\n            type: types.SELECT_SKILL,\r\n            selectedSkill: id,\r\n        } );\r\n    }\r\n\r\n    return ( \r\n        <div className={'skills-container'} >\r\n            <SkillComponent {...newSkill} newFlag={true} editMode={editMode} selectedSkill={selectedSkill} key=\"new\" onSelectSkill={ handleSelectSkill}  handleUpdateSkill={ handleUpdateSkill }/>\r\n            { skills.map ( ( skill: SkillModel ) => \r\n                <SkillComponent {...skill}\r\n                  editMode={editMode}\r\n                  handleDeleteSkill={(id:string)=>actions.deleteSkill(id)}\r\n                  handleUpdateSkill={handleUpdateSkill}\r\n                  key={skill.id}\r\n                  onSelectSkill={handleSelectSkill}\r\n                  selectedSkill={selectedSkill}\r\n                /> ) \r\n            }\r\n        </div>\r\n    );  \r\n};\r\n\r\nexport default SkillsComponent;","//React\r\nimport React, { SyntheticEvent, useContext, useEffect } from 'react';\r\n\r\n//Context\r\nimport { StoreContext } from '../../../context/StoreContext';\r\n\r\n//Material UI\r\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from '@material-ui/core';\r\n\r\n//Styles\r\nimport './ExportDialogComponent.scss';\r\n\r\ndeclare var navigator: NavigatorModel;\r\n\r\nexport interface ExportDialogComponentModel{ \r\n  openState: boolean,\r\n  onClose: ( event:SyntheticEvent )=>void,\r\n}\r\n\r\ninterface NavigatorModel{ \r\n    clipboard: any;\r\n}\r\n\r\nexport const ExportDialogComponent = ( props: ExportDialogComponentModel ) => { \r\n  const { state, dispatch, actions } = useContext(StoreContext);\r\n  const { openState, onClose } = props;\r\n  \r\n  const exportPrefix = `\r\n  /**\r\n   * Replace the content of this file (/src/manifest.ts) with the manifest data copied by the export button\r\n   */\r\n  import ManifestModel from './models/ManifestModel';\r\n  \r\n  export const manifest:ManifestModel = `\r\n  const handleCopyEvent = () => { \r\n    navigator.clipboard.writeText(exportPrefix + JSON.stringify({intro: state.intro, skills: state.skills, experiences: state.experiences}, null, 4)).then(function() {\r\n      actions.snackbar( 'Manifest copied to clipboard' );\r\n    }, function() {\r\n      actions.snackbar( 'Manifest copy to clipboard failed, try manually copy and paste the manifest' );\r\n    });\r\n  }\r\n  return ( \r\n    <Dialog\r\n      className=\"export-dialog\"\r\n      open={openState}\r\n      onClose={onClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">Export Manifest Data</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          <pre className=\"export-data\">{exportPrefix + JSON.stringify({intro: state.intro, skills: state.skills, experiences: state.experiences}, null, 4)}</pre>\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleCopyEvent} color=\"primary\">\r\n          Copy to Clipboard\r\n        </Button>\r\n        <Button onClick={onClose} color=\"primary\" autoFocus>\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}","//React\r\nimport React, { useContext, SyntheticEvent, useEffect, useState } from 'react';\r\n\r\n//Context\r\nimport { StoreContext } from '../../context/StoreContext';\r\nimport { types } from '../../context/reducers';\r\n\r\n//Material\r\nimport { AppBar, Toolbar, Typography, Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ExportIcon from '@material-ui/icons/ImportExport';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\n\r\n//Component\r\nimport { ExportDialogComponent } from '../dialogs/ExportDialogComponent/ExportDialogComponent';\r\n\r\n//Style\r\nimport './HeaderComponent.scss';\r\n\r\n\r\nconst HeaderComponent = () => { \r\n    const { state, dispatch, actions } = useContext(StoreContext);\r\n\r\n    //local state\r\n    const [ exportModalState, toggleExportModal ] = useState( false );\r\n\r\n    /**\r\n     * Opening of the export dialog is handled as a local state\r\n     * @param event Object\r\n     */\r\n    const handleExportDialogClose = ( event: SyntheticEvent ):void => { \r\n      toggleExportModal( false );\r\n  }\r\n\r\n    /**\r\n     * Toggle global export mode\r\n     */\r\n    const handletoggleEditMode = ():void => { \r\n        dispatch( { \r\n            type: types.TOGGLE_EDIT,\r\n            editMode: !state.editMode\r\n        } );\r\n    };\r\n\r\n    /**\r\n     * Remove toolbar for print out\r\n     */\r\n    const handlePrintModeClick = () => { \r\n      actions.handlePrintModeToggle( true );\r\n    }\r\n\r\n    return (\r\n        state.printMode ? <div></div>:\r\n        <div className=\"header-container\" >\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Toolbar className=\"toolbar\">\r\n                    <Typography variant=\"h6\" color=\"inherit\">\r\n                        Resume\r\n                    </Typography>\r\n                    <div className=\"spacer\" />\r\n\r\n                    <Button variant=\"contained\" onClick={ handlePrintModeClick }>\r\n                        <PrintIcon/> Hide Toolbar for Print\r\n                    </Button>\r\n\r\n                    { \r\n                        /*  Generate PDF Button\r\n                            ------------------*/\r\n                    }\r\n                    <Button className=\"right-menu-button\"variant=\"contained\" onClick={ actions.handlePrintPdf }>\r\n                        <DescriptionIcon/> Generate PDF (Has Issues)\r\n                    </Button>\r\n\r\n\r\n                    { \r\n                        /*  Export Data Button\r\n                            ------------------*/\r\n                    }\r\n                    <Button className=\"right-menu-button\" variant=\"contained\" onClick={ () => toggleExportModal( !exportModalState ) }>\r\n                        <ExportIcon/> Export Data\r\n                    </Button>\r\n\r\n                    { \r\n                        /*  Mode Button\r\n                            -----------*/\r\n                    }\r\n                    <Button className=\"right-menu-button\" variant=\"contained\" onClick={ handletoggleEditMode }>\r\n                        { state.editMode ? ['Edit Mode ',<EditIcon key=\"editMode\" className=\"mode-icon\"/>] : ['View Mode', <VisibilityIcon key=\"visibilityIcon\" className=\"mode-icon\"/>] } \r\n                    </Button>  \r\n                </Toolbar>\r\n            </AppBar>\r\n            <ExportDialogComponent onClose={ handleExportDialogClose} openState={exportModalState} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HeaderComponent;","import uuid from 'uuid/v4';\r\n\r\nexport class BulletModel { \r\n    point: string = 'point';\r\n    skills: string[] = [];\r\n}\r\n\r\nexport default class ExperienceModel{ \r\n    id?: string = 'new';\r\n    position:  string =\"Developer\";\r\n    company: string =\"Company\";\r\n    bulletPoints: BulletModel[] = []; \r\n    date: string = \"XXXX-XXXX\";\r\n}","//React\r\nimport React, { useState, ChangeEvent, useEffect } from 'react';\r\n\r\n//Material UI\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { TextField, Fab, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\n\r\n\r\n//FontAwesome\r\nimport * as brandIcons from \"@fortawesome/free-brands-svg-icons\";\r\n\r\n//Model\r\nimport ExperienceModel, { BulletModel } from '../../models/ExperienceModel';\r\n\r\n//Style\r\nimport './ExperienceComponent.scss'\r\nimport SkillModel from '../../models/SkillModel';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport interface ExperienceComponentProps extends ExperienceModel{\r\n  editMode: boolean;\r\n  handleDeleteExperience: Function;\r\n  handleSelectExperience: Function;\r\n  handleUpdateExperience: Function;\r\n  selectedExperience: string;\r\n  skills: SkillModel[];\r\n}\r\n\r\nconst ExperienceComponent = ( props: ExperienceComponentProps )=> { \r\n    const { \r\n      company, \r\n      bulletPoints, \r\n      date,\r\n      editMode,\r\n      handleDeleteExperience,\r\n      handleUpdateExperience,\r\n      handleSelectExperience,\r\n      id,\r\n      position, \r\n      selectedExperience,\r\n      skills\r\n    } = props;\r\n\r\n    //Reassigning the icon set to allow for dynamic input of icon names\r\n    const brandIconSet:any = brandIcons;\r\n    \r\n    //localstate\r\n    const [ companyEdit, handleEditCompany ] = useState( company );\r\n    const [ dateEdit, handleEditDate ] = useState( date.toUpperCase() );\r\n    const [ positionEdit, handleEditPosition ] = useState( position );\r\n    const [ bulletPointsEdit, handleEditBulletPoints ] = useState( bulletPoints );\r\n\r\n    const skillsMapByName: { [key:string]:SkillModel} = skills.reduce( ( result:object, skill ) => { \r\n      return { \r\n        ... result,\r\n        [skill.name]: skill\r\n      };\r\n    }, {} );\r\n\r\n    useEffect( () => { \r\n        handleEditBulletPoints(bulletPoints);\r\n    },[bulletPoints]);\r\n\r\n\r\n\r\n    const handleAddNewBulletPoint = () => { \r\n      handleUpdateExperience( { \r\n        id,\r\n        company: companyEdit,\r\n        date: dateEdit,\r\n        position: positionEdit,\r\n        bulletPoints: [ ...bulletPointsEdit, new BulletModel() ]\r\n      }, id );\r\n    }\r\n\r\n\r\n\r\n    const handleAddNewSkill = ( index: number ) => { \r\n      const newBulletPoints = [ ...bulletPointsEdit ];\r\n      newBulletPoints[ index ] = { \r\n        ...newBulletPoints[ index ],\r\n        skills: [ ...newBulletPoints[ index ].skills, '' ]\r\n      };\r\n\r\n\r\n\r\n      handleUpdateExperience( { \r\n        id,\r\n        company: companyEdit,\r\n        date: dateEdit,\r\n        position: positionEdit,\r\n        bulletPoints: newBulletPoints\r\n      }, id );\r\n    }\r\n\r\n\r\n\r\n    const handleUpdateSkill = ( skillName: string, index: number, skillIndex: number ) => { \r\n      const newBulletPoints = [ ...bulletPointsEdit ];\r\n      newBulletPoints[ index ].skills[ skillIndex ] = skillName;\r\n\r\n      handleUpdateExperience( { \r\n        id,\r\n        company: companyEdit,\r\n        date: dateEdit,\r\n        position: positionEdit,\r\n        bulletPoints: newBulletPoints\r\n      }, id );\r\n    }\r\n\r\n\r\n\r\n    const handleDeleteSkill = ( index: number, skillIndex: number ) => { \r\n      const newBulletPoints = [ ...bulletPointsEdit ];\r\n      newBulletPoints[ index ].skills = newBulletPoints[ index ].skills.filter( ( skill:string, index: number ) => skillIndex !== index );\r\n\r\n      handleUpdateExperience( { \r\n        id,\r\n        company: companyEdit,\r\n        date: dateEdit,\r\n        position: positionEdit,\r\n        bulletPoints: newBulletPoints\r\n      }, id );\r\n    }\r\n\r\n\r\n  \r\n    const handleDeleteBulletPoint = ( _id: number ) => { \r\n      const newBulletPoints = bulletPoints.filter( ( item: BulletModel, index: number ) => _id !== index );\r\n      handleUpdateExperience( { \r\n        id,\r\n        company: companyEdit,\r\n        date: dateEdit,\r\n        position: positionEdit,\r\n        bulletPoints: newBulletPoints\r\n      }, id );\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Reset the skill by loading in the local state with the props\r\n     */\r\n    const handleResetExperience = ( event?: React.MouseEvent<HTMLElement> ):void => {\r\n      event && event.stopPropagation();\r\n\r\n      handleSelectExperience( '' );\r\n      handleEditCompany( company ); \r\n      handleEditDate( date.toUpperCase() );     \r\n      handleEditPosition( position );     \r\n      handleEditBulletPoints( bulletPoints );     \r\n  };\r\n\r\n\r\n\r\n  /**\r\n   * Update Experience handler gathering edited data for the handleUpdateExperience callback\r\n   */\r\n  const _handleUpdateExperience = ( event: React.MouseEvent<HTMLElement> ):void => { \r\n      event.stopPropagation();\r\n      editMode && handleUpdateExperience( { \r\n        id,\r\n        company: companyEdit,\r\n        date: dateEdit,\r\n        position: positionEdit,\r\n        bulletPoints: bulletPointsEdit\r\n      } );\r\n  };\r\n\r\n\r\n\r\n    /**\r\n     * Updates a single bullet in the list of bullets\r\n     */\r\n    const handleEditBulletPoint = ( index: number, value: string ) => { \r\n      const newBulletPoints = [ ...bulletPointsEdit ];\r\n      newBulletPoints[ index ] = { \r\n        point: value,\r\n        skills: newBulletPoints[ index ].skills\r\n      };\r\n      handleEditBulletPoints( newBulletPoints );\r\n    }\r\n\r\n    return ( \r\n      <div>\r\n        { editMode && selectedExperience === id ? \r\n        /**\r\n         * Edit Mode\r\n         * ---------\r\n         */\r\n        <div className=\"edit-container\">\r\n          <div className=\"two-input-container fullwidth-input\">\r\n            {/**\r\n              Company Input\r\n              -------------\r\n             */}\r\n            <TextField\r\n                label=\"Edit Company\"\r\n                className=\"company-input company\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                onChange={ ( event: ChangeEvent<HTMLInputElement> ) => handleEditCompany( event.target.value ) }\r\n                value={companyEdit}\r\n            /> \r\n            {/**\r\n              Date Input\r\n              ----------\r\n             */}\r\n            <TextField\r\n                label=\"Edit Experinence Date\"\r\n                className=\"date-input\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                onChange={ ( event: ChangeEvent<HTMLInputElement> ) => handleEditDate( event.target.value.toUpperCase() ) }\r\n                value={dateEdit}\r\n            /> \r\n          </div>\r\n          {/**\r\n            Position Input\r\n            --------------\r\n            */}          \r\n          <TextField\r\n              label=\"Edit Position\"\r\n              className=\"position-input fullwidth-input\"\r\n              InputLabelProps={{\r\n                  shrink: true,\r\n              }}\r\n              onChange={ ( event: ChangeEvent<HTMLInputElement> ) => handleEditPosition( event.target.value ) }\r\n              value={positionEdit}\r\n          />\r\n            {/**\r\n              Bullet Points Input\r\n              -------------------\r\n             */}\r\n            <div className=\"bulletpoints-container\">\r\n              <label className=\"bulletpoints-label\">Bullet Points</label>\r\n              { bulletPointsEdit.map( \r\n                ( point: BulletModel, index: number ) => \r\n                  <div key={index}>\r\n                    <div className=\"bulletpoint-row\">\r\n                      <TextField\r\n                        label={'Edit Point ' + (index+1)}\r\n                        className=\"bullet-input fullwidth-input\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        onChange={ ( event: ChangeEvent<HTMLInputElement> ) => handleEditBulletPoint( index, event.target.value ) }\r\n                        value={point.point}\r\n                      />\r\n                      <div>\r\n                        <IconButton aria-label=\"Delete\" onClick={()=>handleDeleteBulletPoint( index )}>\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"skills-row\">\r\n                      <div>\r\n                        <IconButton className=\"add-skill-button\" aria-label=\"add\" onClick={()=>handleAddNewSkill( index )}>\r\n                          <AddIcon /> \r\n                        </IconButton>\r\n                      </div>\r\n                      <div className=\"skills-container\">\r\n                        { \r\n                          point.skills.map( ( skillName:string, skillIndex: number ) => { \r\n                            return (\r\n                              <div key={skillIndex}>\r\n                                <FormControl className=\"select-input\" >\r\n                                <InputLabel htmlFor=\"interest\">Select Skills</InputLabel>\r\n                                <Select\r\n                                    value={skillName}\r\n                                    onChange={(event:ChangeEvent<HTMLSelectElement>)=>handleUpdateSkill( event.target.value, index, skillIndex )}\r\n                                    inputProps={{\r\n                                    name: 'skills',\r\n                                    id: 'skills',\r\n                                    }}\r\n                                    >\r\n                                    <MenuItem value=\"\">New Skill</MenuItem>\r\n                                    {skills.map( ( skill: SkillModel ) => { \r\n                                      return ( \r\n                                        <MenuItem key={skill.name} value={skill.name}>{ skill.icon !== '' ? <FontAwesomeIcon className=\"small-skill-icon\" icon={ brandIconSet[ `fa${skill.icon}` ]}/> : ''} &nbsp;{skill.name}</MenuItem>\r\n                                      );\r\n                                    } ) }\r\n                                </Select>\r\n                                </FormControl>\r\n                                <IconButton className=\"remove-skill-button\" aria-label=\"Remove Skill\" onClick={()=>handleDeleteSkill( index, skillIndex )}>\r\n                                  <ClearIcon /> \r\n                                </IconButton>\r\n                              </div>\r\n                            );\r\n                          } )\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n              ) }\r\n              <Fab className=\"add-bullet-button\" variant=\"extended\" color=\"inherit\" aria-label=\"Add\" onClick={handleAddNewBulletPoint}>\r\n                <AddIcon/> &nbsp;\r\n                Add New Bullet Point\r\n              </Fab>\r\n            </div>\r\n            {/**\r\n            *   Action Buttons\r\n            *   --------------\r\n            */}\r\n            <div className=\"action-button-container\">\r\n              <Fab className=\"check-button__no-margin\" aria-label=\"Save\" onClick={ _handleUpdateExperience } >\r\n                  <CheckIcon/>\r\n              </Fab>\r\n              <Fab aria-label=\"Clear\" onClick={handleResetExperience} >\r\n                  <ClearIcon/>\r\n              </Fab>\r\n              <Fab color=\"secondary\" aria-label=\"Delete\" onClick={() => handleDeleteExperience(id) } >\r\n                  <DeleteForeverIcon/>\r\n              </Fab>\r\n            </div>\r\n        </div>: \r\n        /**\r\n         * Non Edit Mode\r\n         * -------------\r\n         */\r\n        <div className={ 'exp' + (editMode ? ' edit-outline clickable':'')} onClick={()=>handleSelectExperience(id)}>\r\n            <div className=\"line1\">\r\n                <div className=\"company\">{company}</div> \r\n                <div className=\"date\">{date.toUpperCase()}</div>\r\n            </div>\r\n            <h2>{position}</h2>\r\n            {bulletPoints.map( ( point: BulletModel, \r\n              index: number ) => \r\n                <div key={index}>\r\n                  <div key={index} className=\"bullet\"><AddIcon className=\"bullet-icon\"/> {point.point}</div>\r\n                  <div className=\"nonedit-skill-list\">\r\n                    { point.skills.map( ( skillName: string, index: number ) => {  \r\n                      const skillObject: SkillModel = skillsMapByName[skillName];\r\n                      return (\r\n                        <div className=\"nonedit-skill-item\" key={index}>{ skillObject && skillObject.icon !== '' ? \r\n                          <FontAwesomeIcon className=\"small-skill-icon\" icon={ brandIconSet[ `fa${skillObject.icon}` ]}/> : ''} \r\n                          &nbsp;{skillObject && skillObject.name}\r\n                        </div>);\r\n                    } ) }\r\n                  </div>\r\n                </div>\r\n                 \r\n              ) }\r\n        </div>\r\n        }\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ExperienceComponent;","//React\r\nimport React, { useContext } from 'react';\r\n\r\n//Context\r\nimport { StoreContext } from '../../context/StoreContext';\r\n\r\n//Component\r\nimport ExperienceComponent from './ExperienceComponent';\r\n\r\n//Material UI\r\nimport { Fab } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n//Model\r\nimport ExperienceModel from '../../models/ExperienceModel';\r\nimport ExperiencesModel from '../../models/ExperienceModel';\r\nimport { types } from '../../context/reducers';\r\n\r\n//Style\r\nimport './ExperiencesComponent.scss';\r\n\r\nexport interface ExperiencesProps{}\r\n\r\nconst ExperiencesComponent = ( props: ExperiencesProps )=> { \r\n    const { state, dispatch, actions } = useContext(StoreContext);\r\n    const { editMode, selectedExperience, skills } = state;\r\n    const experiences: ExperiencesModel[] = state.experiences;\r\n\r\n    /**\r\n     * Handle update for an exisiting experience\r\n     */\r\n    const handleUpdateExperience = ( experience: ExperienceModel, selectedExperience?: string ):void => { \r\n        actions.updateExperience( experience, selectedExperience );\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Handle selection of a experience during edit mode\r\n     * @param id \r\n     */\r\n    const handleSelectExperience = ( id: string ):void =>{ \r\n        dispatch( { \r\n            type: types.SELECT_EXPERIENCE,\r\n            selectedExperience: id,\r\n        } );\r\n    }\r\n    \r\n    return ( \r\n      <div>\r\n        {  experiences.map ( ( experience: ExperiencesModel ) => \r\n          <ExperienceComponent {...experience} \r\n            key={experience.id} \r\n            editMode={editMode}\r\n            handleDeleteExperience={( id:string ) => actions.deleteExperience(id)}\r\n            handleUpdateExperience={handleUpdateExperience}\r\n            handleSelectExperience={handleSelectExperience}\r\n            selectedExperience={selectedExperience}\r\n            skills={skills}\r\n          /> ) }\r\n        { editMode ? \r\n          <Fab className=\"add-exp-button\" variant=\"extended\" color=\"inherit\" aria-label=\"Add\" onClick={ ()=> handleUpdateExperience( new ExperienceModel() ) }>\r\n            <AddIcon/> &nbsp;\r\n            Add New Experience\r\n          </Fab>: undefined }\r\n      </div>\r\n    );  \r\n};\r\n\r\nexport default ExperiencesComponent;","//React\r\nimport React, { useContext } from 'react';\r\n\r\n//Context\r\nimport { StoreContext } from '../../context/StoreContext';\r\nimport { types } from '../../context/reducers';\r\n\r\n//Material UI\r\nimport { IconButton, Snackbar } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n//Model\r\nimport GenericSnackbarModel from '../../models/GenericSnackbarModel';\r\n\r\nconst GenericSnackbarComponent = () => { \r\n    const { state, dispatch, actions } = useContext( StoreContext );\r\n    const genericSnackbar: GenericSnackbarModel = state.genericSnackbar;\r\n    const { open, hideDuration, message } = genericSnackbar;\r\n\r\n\r\n\r\n    /**\r\n     * Close the generic snackbar\r\n     */\r\n    const handleClose = ():void => { \r\n      dispatch({ \r\n        type: types.HIDE_GENERIC_SNACKBAR\r\n      })\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={open}\r\n          autoHideDuration={hideDuration}\r\n          onClose={handleClose}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\">{message}</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>,\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default GenericSnackbarComponent;","//React\r\nimport React, { Component, useState, useContext } from 'react';\r\n\r\n//Component\r\nimport IntroComponent from './components/IntroComponent/IntroComponent';\r\nimport SkillsComponent from './components/SkillsComponent/SkillsComponent';\r\nimport HeaderComponent from './components/HeaderComponent/HeaderComponent';\r\nimport ExperiencesComponent from './components/ExperiencesComponent/ExperiencesComponent';\r\nimport GenericSnackbarComponent from './components/snackbars/GenericSnackbarComponent';\r\n\r\n//Style\r\nimport './App.scss';\r\nimport { StoreContext } from './context/StoreContext';\r\n\r\nexport interface AppProps {}\r\nconst App = ( props: AppProps ) => {\r\n\r\n  const { state, dispatch, actions } = useContext( StoreContext );\r\n\r\n  /**\r\n   * Readded toolbar clicking in the window after printout\r\n   */\r\n  const handlePrintModeClick = () => { \r\n    actions.handlePrintModeToggle( false );\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <HeaderComponent />\r\n      <div className=\"content-container\" onClick={ handlePrintModeClick }>\r\n        <div className=\"content\">\r\n          <IntroComponent/>\r\n          <SkillsComponent/>\r\n          <ExperiencesComponent/>\r\n        </div>\r\n      </div>\r\n      <GenericSnackbarComponent/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","//React\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n//Context\r\nimport { StoreProvider } from './context/StoreContext';\r\n\r\n//Component\r\nimport App from './App';\r\n\r\n//FontAwesome\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faStroopwafel } from '@fortawesome/free-solid-svg-icons'\r\n\r\n//Style\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <StoreProvider>\r\n        <App />\r\n    </StoreProvider>, \r\n    document.getElementById('root')\r\n);\r\n\r\nlibrary.add(faStroopwafel)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","//Context\r\nimport { types } from \"./reducers\";\r\n\r\n//Model\r\nimport SkillModel from \"../models/SkillModel\";\r\nimport { StateModel } from \"../models/StateModel\";\r\n\r\n//Utility\r\nimport uuid from 'uuid/v4';\r\nimport ExperienceModel from \"../models/ExperienceModel\";\r\ndeclare const html2pdf: Function;\r\n\r\nexport const useActions = (state:StateModel, dispatch: Function) => {\r\n\r\n  /**\r\n   * Search and deletes a experience with the associated id\r\n   */\r\n  function deleteExperience( id: string ){ \r\n\r\n    const newExperiences = state.experiences.filter( ( experience: ExperienceModel ) => { \r\n      return experience.id !== id;\r\n    } );\r\n    \r\n    dispatch( { \r\n        type: types.UPDATE_EXPERIENCE, \r\n        experiences: newExperiences \r\n    } )\r\n  }\r\n\r\n\r\n  /**\r\n   * Search and deletes a skill with the associated id\r\n   */\r\n  function deleteSkill( id: string ){ \r\n\r\n    const newSkills = state.skills.filter( ( experience: SkillModel ) => { \r\n      return experience.id !== id;\r\n    } );\r\n    \r\n    dispatch( { \r\n        type: types.UPDATE_SKILL, \r\n        skills: newSkills \r\n    } )\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Hides toolbar for print, clicking on the toolback again should return the page to its initial state\r\n   */\r\n  const handlePrintModeToggle = ( printMode: boolean ) => { \r\n    if ( !printMode ){ \r\n      dispatch( { \r\n        type: types.TOGGLE_PRINT,\r\n        printMode: false\r\n      } )\r\n      //Adjust the margin for print\r\n      const $content:HTMLElement|null = document.querySelector( \".content\" );\r\n      $content && ( $content.style.margin = 'initial' );\r\n    } else { \r\n      dispatch( { \r\n        type: types.TOGGLE_PRINT,\r\n        printMode: true\r\n      } )\r\n      //Adjust the margin for print\r\n      const $content:HTMLElement|null = document.querySelector( \".content\" );\r\n      $content && ( $content.style.margin = '-4rem' );\r\n      snackbar( 'Click anywhere on the screen to turn off print mode' );\r\n    }\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * Prints the resume to pdf, has display issues\r\n   */\r\n  const handlePrintPdf = () =>{ \r\n    \r\n    //Hide the SVG icons that cannot be render correctly\r\n    document.querySelectorAll( \".skill-icon\" ).forEach( (icon:any) => { \r\n      icon.style.display = 'none';\r\n    } );\r\n\r\n    //Move the margin up to remove the empty space for the pdf\r\n    const $content:HTMLElement|null = document.querySelector( \".content\" );\r\n    $content && ($content.style.margin = '-50px 0 0' );\r\n\r\n    html2pdf( document.querySelector( '.content'), {\r\n      margin: 0.4,\r\n      filename: `Resume.pdf`,\r\n      image: {\r\n        type: 'jpeg',\r\n        quality: 0.90\r\n      },\r\n      enableLinks: false,\r\n      html2canvas: {\r\n        onrendered: function ( ){ \r\n          //Return the svg icons after pdf generation\r\n          document.querySelectorAll( \".skill-icon\" ).forEach( (icon:any) => { \r\n            icon.style.display = 'initial';\r\n          } );\r\n\r\n          //Return the top margin after pdf generation\r\n          const $content:HTMLElement|null = document.querySelector( \".content\" );\r\n          $content && ( $content.style.margin = 'initial' );\r\n        },\r\n        dpi: 600,\r\n        letterRendering: false,\r\n        width: 730,\r\n      },\r\n      jsPDF: {\r\n        unit: 'in',\r\n        format: 'letter',\r\n        orientation: 'portrait'\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Search and updates an existing experience or creates a new experience if the id is 'new'\r\n   */\r\n  function updateExperience( experience: ExperienceModel, selectedExperience?: string ){ \r\n    let newExperiences;\r\n    //Special handler for new experience\r\n    if ( experience.id === 'new'){ \r\n      newExperiences = [\r\n        ...state.experiences,\r\n        { \r\n          ...experience,\r\n          id: uuid()\r\n        }\r\n      ];\r\n    } else {\r\n      newExperiences = state.experiences.reduce( ( result: ExperienceModel[], _experience: ExperienceModel ) => {\r\n        const updateExperience: ExperienceModel =  (_experience.id === experience.id )? experience : _experience;\r\n        return [\r\n          ...result,\r\n          updateExperience\r\n        ] \r\n      }, [] );\r\n    }\r\n    dispatch( { \r\n      type: types.UPDATE_EXPERIENCE, \r\n      experiences: newExperiences, \r\n      selectedExperience: selectedExperience || undefined,\r\n    } )\r\n  }\r\n\r\n\r\n  /**\r\n   * Search and updates an existing skill or creates a new skill if the id is 'new'\r\n   */\r\n  function updateSkill( skill: SkillModel ){ \r\n    let newSkills;\r\n    //Special handler for new skill\r\n    if ( skill.id === 'new'){ \r\n      newSkills = [\r\n        ...state.skills,\r\n        { \r\n          ...skill,\r\n          id: uuid()\r\n        }\r\n      ];\r\n    } else {\r\n      newSkills = state.skills.reduce( ( result: SkillModel[], _skill: SkillModel ) => {\r\n        const updateSkill: SkillModel =  (_skill.id === skill.id )? skill : _skill;\r\n        return [\r\n          ...result,\r\n          updateSkill\r\n        ] \r\n      }, [] );      \r\n    }\r\n    dispatch( { \r\n        type: types.UPDATE_SKILL, \r\n        skills: newSkills \r\n    } )\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Utility function to generate generic snackbar\r\n   */\r\n  function snackbar( message:string, hideDuration?: number){ \r\n    dispatch( { \r\n      type: types.SHOW_GENERIC_SNACKBAR,\r\n      hideDuration,\r\n      message,\r\n    } )\r\n  }\r\n\r\n  return {\r\n    deleteExperience,\r\n    deleteSkill,\r\n    handlePrintModeToggle,\r\n    handlePrintPdf,\r\n    snackbar,\r\n    updateExperience,\r\n    updateSkill,\r\n  };\r\n};\r\n"],"sourceRoot":""}