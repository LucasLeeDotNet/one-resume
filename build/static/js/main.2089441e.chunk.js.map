{"version":3,"sources":["serviceWorker.ts","manifest.ts","context/initialState.ts","models/GenericSnackbarModel.ts","context/reducers.ts","context/StoreContext.js","components/IntroComponent/IntroComponent.tsx","components/SkillsComponent/Skill.component.tsx","models/SkillModel.ts","components/SkillsComponent/SkillsComponent.tsx","components/dialogs/ExportDialogComponent/ExportDialogComponent.tsx","components/HeaderComponent/Header.component.tsx","components/ExperiencesComponent/BulletPointskill.component.tsx","components/ExperiencesComponent/BulletPoint.component.tsx","models/ExperienceModel.ts","components/ExperiencesComponent/Experience.component.tsx","components/ExperiencesComponent/Experiences.component.tsx","components/snackbars/GenericSnackbarComponent.tsx","App.tsx","index.tsx","context/actions.ts"],"names":["Boolean","window","location","hostname","match","manifest","intro","name","position","statement","skills","level","interest","icon","lastUsed","id","experiences","bulletPoints","point","company","date","initialState","Object","objectSpread","editMode","map","experience","uuid","genericSnackbar","open","hideDuration","message","printMode","skill","selectedExperience","selectedSkill","types","HIDE_GENERIC_SNACKBAR","SELECT_EXPERIENCE","SELECT_SKILL","SHOW_GENERIC_SNACKBAR","TOGGLE_EDIT","TOGGLE_PRINT","UPDATE_EXPERIENCE","UPDATE_NAME","UPDATE_POSITION","UPDATE_SKILL","UPDATE_STATEMENT","reducer","state","arguments","length","undefined","action","type","Error","StoreContext","createContext","IntroComponent","props","_useContext","useContext","dispatch","_state$intro","actions","useEffect","toggleStatementEditMode","togglePositionEditMode","toggleNameEditMode","_useState","useState","_useState2","slicedToArray","statementEditMode","_useState3","_useState4","positionEditMode","_useState5","_useState6","nameEditMode","react_default","a","createElement","className","index_es","color","aria-label","onClick","Check_default","label","InputLabelProps","shrink","onChange","event","target","value","fullWidth","multiline","margin","style","variant","SkillComponent","handleDeleteSkill","handleUpdateSkill","newFlag","onSelectSkill","nameEdit","handleEditName","levelEdit","handleEditLevel","interestEdit","handleEditInterest","_useState7","_useState8","lastUsedEdit","handleEditLastUsed","_useState9","_useState10","iconEdit","handleEditIcon","brandIconSet","brandIcons","faIcon","handleResetSkill","stopPropagation","Add_default","key","react_fontawesome_index_es","htmlFor","keys","filter","skillIcon","iconName","replace","concat","Slider_default","Number","max","min","step","inputProps","size","Clear_default","DeleteForever_default","SkillModel","SkillsComponent","newSkill","updateSkill","handleSelectSkill","Skill_component","assign","deleteSkill","ExportDialogComponent","openState","onClose","exportPrefix","aria-labelledby","aria-describedby","JSON","stringify","navigator","clipboard","writeText","then","snackbar","autoFocus","HeaderComponent","exportModalState","toggleExportModal","ImportExport_default","Edit_default","Visibility_default","ExportDialogComponent_ExportDialogComponent_ExportDialogComponent","BulletPointSkill","bulletIndex","onDeleteSkill","onUpdateSkill","skillIndex","skillName","stateSkills","iSkillIndex","bind","IconButton_default","BulletPoint","onAddNewSkill","onBulletPointChange","onDeleteBulletPoint","index","Delete_default","BulletPointskill_component","BulletModel","classCallCheck","this","ExperienceModel","ExperienceComponent","handleDeleteExperience","handleUpdateExperience","handleSelectExperience","companyEdit","handleEditCompany","toUpperCase","dateEdit","handleEditDate","positionEdit","handleEditPosition","bulletPointsEdit","handleEditBulletPoints","skillsMapByName","reduce","result","defineProperty","getAllEdits","handleAddNewSkill","newBulletPoints","toConsumableArray","skillIndexInArray","handleDeleteBulletPoint","_id","item","handleEditBulletPoint","BulletPoint_component","skillObject","ExperiencesComponent","deleteExperience","selectedExp","updateExperience","Experience_component","GenericSnackbarComponent","handleClose","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","Close_default","App","Header_component","handlePrintModeToggle","components_IntroComponent_IntroComponent","components_SkillsComponent_SkillsComponent","Experiences_component","snackbars_GenericSnackbarComponent","ReactDOM","render","_ref","children","_useReducer","useReducer","_useReducer2","newExperiences","newSkills","$content","document","querySelector","handlePrintPdf","querySelectorAll","forEach","display","html2pdf","filename","image","quality","enableLinks","html2canvas","onrendered","dpi","letterRendering","width","jsPDF","unit","format","orientation","_experience","_skill","useActions","Provider","src_App_0","getElementById","library","add","faStroopwafel","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2089441e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\n  /**\r\n   * Replace the content of this file (/src/manifest.ts) with the manifest data copied by the export button\r\n   */\r\n  import ManifestModel from './models/ManifestModel';\r\n  \r\n  export const manifest:ManifestModel = {\r\n    \"intro\": {\r\n        \"name\": \"Lucas Lee\",\r\n        \"position\": \"Javascript - Frontend - Web Developer\",\r\n        \"statement\": \"Passionate about Javascript, specializing in rapid development with strong sense of design. Lead frontend development on a new marketing platform for EAB. Experienced with a wide range of skillset that extends from frontend frameworks to containerized Devops and AWS.\"\r\n    },\r\n    \"skills\": [\r\n        {\r\n            \"name\": \"Javascript\",\r\n            \"level\": 8.5,\r\n            \"interest\": \"Highest\",\r\n            \"icon\": \"Js\",\r\n            \"lastUsed\": \"Current\",\r\n            \"id\": \"6e8abee1-0531-4c17-9da0-128a96ed1f00\"\r\n        },\r\n        {\r\n            \"icon\": \"Js\",\r\n            \"id\": \"6ba93692-068a-487d-9c33-c737f94bdd8a\",\r\n            \"name\": \"Typescript\",\r\n            \"level\": 7,\r\n            \"interest\": \"High\",\r\n            \"lastUsed\": \"Current\"\r\n        },\r\n        {\r\n            \"name\": \"React\",\r\n            \"level\": 7,\r\n            \"interest\": \"High\",\r\n            \"icon\": \"React\",\r\n            \"lastUsed\": \"Current\",\r\n            \"id\": \"a7157873-7e90-46b5-8ad5-f47fa2283a3b\"\r\n        },\r\n        {\r\n            \"name\": \"Angular\",\r\n            \"level\": 7.5,\r\n            \"interest\": \"High\",\r\n            \"icon\": \"Angular\",\r\n            \"lastUsed\": \"This Month\",\r\n            \"id\": \"629653c7-f138-4b1b-a408-786da240532e\"\r\n        },\r\n        {\r\n            \"name\": \"Node.js\",\r\n            \"level\": 7.5,\r\n            \"interest\": \"High\",\r\n            \"icon\": \"Node\",\r\n            \"lastUsed\": \"This Month\",\r\n            \"id\": \"33352bcf-59e7-4616-8a25-6dc7bdc8b7f5\"\r\n        },\r\n        {\r\n            \"name\": \"Docker\",\r\n            \"level\": 7,\r\n            \"interest\": \"High\",\r\n            \"icon\": \"Docker\",\r\n            \"lastUsed\": \"Current\",\r\n            \"id\": \"a993d04b-081e-495d-960b-6ee326889092\"\r\n        },\r\n        {\r\n            \"name\": \"AWS\",\r\n            \"level\": 6,\r\n            \"interest\": \"High\",\r\n            \"icon\": \"Aws\",\r\n            \"lastUsed\": \"Current\",\r\n            \"id\": \"909d3334-ad49-4e3a-abb1-b5c748e1a67a\"\r\n        },\r\n        {\r\n            \"name\": \"React Native\",\r\n            \"level\": 6,\r\n            \"interest\": \"High\",\r\n            \"icon\": \"React\",\r\n            \"lastUsed\": \"Before This Year\",\r\n            \"id\": \"bc5f93b9-b733-4fd0-8d73-30d3acdeb317\"\r\n        },\r\n        {\r\n            \"icon\": \"Dev\",\r\n            \"id\": \"dedcc504-ba70-4a4a-abc2-a39f5dc8d495\",\r\n            \"name\": \"MongoDB\",\r\n            \"level\": 5,\r\n            \"interest\": \"Moderate\",\r\n            \"lastUsed\": \"This Year\"\r\n        },\r\n        {\r\n            \"icon\": \"Dev\",\r\n            \"id\": \"3d10cdb6-69a5-4d6f-839a-d9e729ee90b8\",\r\n            \"name\": \"SQL\",\r\n            \"level\": 5,\r\n            \"interest\": \"Moderate\",\r\n            \"lastUsed\": \"This Year\"\r\n        },\r\n        {\r\n            \"name\": \"Photoshop\",\r\n            \"level\": 7,\r\n            \"interest\": \"Moderate\",\r\n            \"icon\": \"Adobe\",\r\n            \"lastUsed\": \"This Month\",\r\n            \"id\": \"64d00ad7-4437-4b7a-af76-314b0f5b8f36\"\r\n        },\r\n        {\r\n            \"name\": \"Java\",\r\n            \"level\": 4,\r\n            \"interest\": \"Moderate\",\r\n            \"icon\": \"Java\",\r\n            \"lastUsed\": \"Before This Year\",\r\n            \"id\": \"39666cb8-3e64-48b6-8630-43a2df5102d9\"\r\n        },\r\n        {\r\n            \"name\": \"JQuery\",\r\n            \"level\": 7.5,\r\n            \"interest\": \"Low\",\r\n            \"icon\": \"Js\",\r\n            \"lastUsed\": \"This Year\",\r\n            \"id\": \"bdcf32e9-07c5-47d9-b878-0a564f4645cd\"\r\n        },\r\n        {\r\n            \"icon\": \"Adobe\",\r\n            \"id\": \"05c66d96-c70f-4010-88ba-39aa5a4c2252\",\r\n            \"name\": \"Coldfusion\",\r\n            \"level\": 6,\r\n            \"interest\": \"Low\",\r\n            \"lastUsed\": \"This Year\"\r\n        },\r\n        {\r\n            \"icon\": \"Sass\",\r\n            \"id\": \"375eb9e7-537b-40f7-bdf2-68af901f85e0\",\r\n            \"name\": \"CSS/SCSS\",\r\n            \"level\": 7,\r\n            \"interest\": \"High\",\r\n            \"lastUsed\": \"Current\"\r\n        },\r\n        {\r\n            \"id\": \"3c880103-098f-4bd7-b81e-1afce6b01985\",\r\n            \"icon\": \"Angular\",\r\n            \"name\": \"AngularJS\",\r\n            \"level\": 7.5,\r\n            \"interest\": \"Moderate\",\r\n            \"lastUsed\": \"Before This Year\"\r\n        }\r\n    ],\r\n    \"experiences\": [\r\n        {\r\n            \"bulletPoints\": [\r\n                {\r\n                    \"point\": \"Currently leading frontend development for the new Marketing Platform\",\r\n                    \"skills\": [\r\n                        \"React\",\r\n                        \"Javascript\",\r\n                        \"Typescript\",\r\n                        \"Node.js\",\r\n                        \"Docker\",\r\n                        \"AWS\",\r\n                        \"MongoDB\",\r\n                        \"CSS/SCSS\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"point\": \"Lead frontend development for adding Stripe payment system to handle live student application payments \",\r\n                    \"skills\": [\r\n                        \"Javascript\",\r\n                        \"Coldfusion\",\r\n                        \"JQuery\",\r\n                        \"CSS/SCSS\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"point\": \"Individual project, creating a responsive ad tools for generating google ad previews for routing to clients\",\r\n                    \"skills\": [\r\n                        \"Angular\",\r\n                        \"Typescript\",\r\n                        \"Javascript\",\r\n                        \"Docker\",\r\n                        \"Docker\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"point\": \"Collaborate on the project to create a budget management tool for calculating estimated cost of display ad for business clients\",\r\n                    \"skills\": [\r\n                        \"Javascript\",\r\n                        \"React\",\r\n                        \"CSS/SCSS\",\r\n                        \"MongoDB\",\r\n                        \"Node.js\",\r\n                        \"Docker\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"point\": \"Lead frontend development for creating a platform for sending out SMS to large volume of Students\",\r\n                    \"skills\": [\r\n                        \"Javascript\",\r\n                        \"Coldfusion\",\r\n                        \"JQuery\",\r\n                        \"CSS/SCSS\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"point\": \"Lead frontend development for adding Google Drive upload to Student Admission Application\",\r\n                    \"skills\": [\r\n                        \"Javascript\",\r\n                        \"Coldfusion\",\r\n                        \"CSS/SCSS\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"point\": \"Lead frontend development for adding a passwordless login system for Student Application\",\r\n                    \"skills\": [\r\n                        \"Javascript\",\r\n                        \"Coldfusion\",\r\n                        \"CSS/SCSS\",\r\n                        \"JQuery\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"point\": \"Created the frontend for the code review web tool that became the defacto code review tool for the department\",\r\n                    \"skills\": [\r\n                        \"Javascript\",\r\n                        \"JQuery\",\r\n                        \"Coldfusion\",\r\n                        \"CSS/SCSS\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"company\": \"EAB Richmond\",\r\n            \"date\": \"MAY 2015 - PRESENT\",\r\n            \"id\": \"0af48c06-8926-4397-9795-91201c086ea1\",\r\n            \"position\": \"Senior Web Developer\"\r\n        },\r\n        {\r\n            \"bulletPoints\": [\r\n                {\r\n                    \"point\": \"Built a AngularJS Touch based POS system that has been in used to serve customer for the last 4 years\",\r\n                    \"skills\": [\r\n                        \"AngularJS\",\r\n                        \"Javascript\",\r\n                        \"Node.js\",\r\n                        \"MongoDB\",\r\n                        \"Photoshop\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"point\": \"Provided functionality for reporting, ordering using a touch interface, table editor, split check payment, orders/receipt printing and menu creation\",\r\n                    \"skills\": []\r\n                },\r\n                {\r\n                    \"point\": \"Currently live in production, operating in maintenance mode in 2019\",\r\n                    \"skills\": []\r\n                }\r\n            ],\r\n            \"company\": \"Point of Sales System for UMI Sushi Bistro, Short Pump\",\r\n            \"date\": \"NOV 2014 - MAY 2015\",\r\n            \"id\": \"764c51b4-f470-4b6e-8beb-1981040747f5\",\r\n            \"position\": \"Freelance\"\r\n        },\r\n        {\r\n            \"bulletPoints\": [\r\n                {\r\n                    \"point\": \"Built mobile application using a Javascript Platform (Appcelerator)\",\r\n                    \"skills\": [\r\n                        \"Javascript\",\r\n                        \"Node.js\",\r\n                        \"Photoshop\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"point\": \"Built Full Stack Web Application with node\",\r\n                    \"skills\": [\r\n                        \"Javascript\",\r\n                        \"Node.js\",\r\n                        \"MongoDB\",\r\n                        \"CSS/SCSS\",\r\n                        \"Photoshop\"\r\n                    ]\r\n                }\r\n            ],\r\n            \"company\": \"Shockoe | Mobile by Design\",\r\n            \"date\": \"MAR 2014 - NOV 2014\",\r\n            \"id\": \"d3885317-f7a8-49e3-b287-aed3b3405a3d\",\r\n            \"position\": \"Mobile Application Developer\"\r\n        },\r\n        {\r\n            \"id\": \"94034335-ea93-43f4-b583-f24a80e8033b\",\r\n            \"company\": \"Virginia Commonwealth University\",\r\n            \"date\": \"2009 - 2013\",\r\n            \"position\": \"Computer Science, Bachelor's Degree\",\r\n            \"bulletPoints\": []\r\n        }\r\n    ]\r\n}","//Manifest\r\nimport { manifest } from \"../manifest\";\r\n\r\n//Model\r\nimport ExperienceModel from \"../models/ExperienceModel\";\r\nimport GenericSnackbarModel from \"../models/GenericSnackbarModel\";\r\nimport SkillModel from \"../models/SkillModel\";\r\nimport { StateModel } from \"../models/StateModel\";\r\n\r\n//Utility\r\nimport uuid from 'uuid/v4';\r\n\r\nexport const initialState: StateModel = { \r\n    ...manifest, \r\n    editMode: false,\r\n    experiences: manifest.experiences.map( ( experience:ExperienceModel ) => { return { ...experience, id: uuid() }} ),\r\n    genericSnackbar: new GenericSnackbarModel(),\r\n    printMode: false,\r\n    skills: manifest.skills.map( ( skill:SkillModel ) => { return { ...skill, id: uuid() }} ),\r\n    selectedExperience: '',\r\n    selectedSkill: '',\r\n};\r\n","export default class GenericSnackbarModel{ \r\n  open: boolean = false;\r\n  hideDuration: number = 2000;\r\n  message: string = ''\r\n}","//Model\r\nimport { initialState } from './initialState';\r\nimport { StateModel } from '../models/StateModel';\r\n\r\n\r\nconst types = {\r\n    HIDE_GENERIC_SNACKBAR: 'HIDE_GENERIC_SNACKBAR',\r\n    SELECT_EXPERIENCE: 'SELECT_EXPERIENCE',\r\n    SELECT_SKILL: 'SELECT_SKILL',\r\n    SHOW_GENERIC_SNACKBAR: 'SHOW_GENERIC_SNACKBAR',\r\n    TOGGLE_EDIT: 'TOGGLE_EDIT',\r\n    TOGGLE_PRINT: 'TOGGLE_PRINT',\r\n    UPDATE_EXPERIENCE: 'UPDATE_EXPERIENCE',\r\n    UPDATE_NAME: 'UPDATE_NAME',\r\n    UPDATE_POSITION: 'UPDATE_POSITION',\r\n    UPDATE_SKILL: 'UPDATE_SKILL',\r\n    UPDATE_STATEMENT: 'UPDATE_STATEMENT',\r\n};\r\n\r\nconst reducer = (state:StateModel = initialState, action:any ):StateModel => {\r\n\r\n  switch (action.type) {\r\n        /**\r\n         * Hide the generic snackbar\r\n         */\r\n        case types.HIDE_GENERIC_SNACKBAR:\r\n          return { \r\n            ...state,\r\n            genericSnackbar: { \r\n              ...state.genericSnackbar,\r\n              open: false\r\n            }\r\n          }\r\n\r\n        /**\r\n         * Select a experience with mouse click in edit mode\r\n         */\r\n        case types.SELECT_EXPERIENCE:\r\n        return {\r\n            ...state,\r\n            selectedExperience: action.selectedExperience,\r\n            selectedSkill: ''\r\n        }\r\n\r\n        /**\r\n         * Select a skill with mouse click\r\n         */\r\n        case types.SELECT_SKILL:\r\n            return {\r\n                ...state,\r\n                selectedSkill: action.selectedSkill,\r\n                selectedExperience: ''\r\n            }\r\n\r\n        /**\r\n         * Show the generic snackbar\r\n         */\r\n        case types.SHOW_GENERIC_SNACKBAR:\r\n        return { \r\n          ...state,\r\n          genericSnackbar: { \r\n            ...state.genericSnackbar,\r\n            open: true,\r\n            hideDuration: action.hideDuration || state.genericSnackbar.hideDuration,\r\n            message: action.message\r\n          }\r\n        }\r\n\r\n        /**\r\n         * Toggle global edit mode\r\n         */\r\n        case types.TOGGLE_EDIT:\r\n            return {\r\n                ...state,\r\n                editMode: action.editMode,\r\n                intro: {\r\n                    ...state.intro,\r\n                }, \r\n                selectedSkill: state.editMode === true ? '' : state.selectedSkill\r\n            }\r\n\r\n        /**\r\n         * Toggle element adjustment to enable the page for print\r\n         */\r\n        case types.TOGGLE_PRINT:\r\n        return {\r\n            ...state,\r\n            printMode: action.printMode\r\n        }\r\n\r\n                /**\r\n         * Update a particular experience\r\n         */\r\n        case types.UPDATE_EXPERIENCE:\r\n        return { \r\n            ...state,\r\n            experiences: action.experiences,\r\n            selectedExperience: action.selectedExperience || ''\r\n        }\r\n\r\n        /**\r\n         * Update the name Field\r\n         */\r\n        case types.UPDATE_NAME:\r\n            return {\r\n                ...state,\r\n                intro: {\r\n                    ...state.intro,\r\n                    name: action.name\r\n                }\r\n            }\r\n\r\n        /**\r\n         * Update the position field\r\n         */\r\n        case types.UPDATE_POSITION:\r\n            return {\r\n                ...state,\r\n                intro: {\r\n                    ...state.intro,\r\n                    position: action.position\r\n                }\r\n            }\r\n        \r\n        /**\r\n         * Update a particular skill\r\n         */\r\n        case types.UPDATE_SKILL:\r\n            return { \r\n                ...state,\r\n                skills: action.skills,\r\n                selectedSkill: ''\r\n            }\r\n        \r\n\r\n        /**\r\n         * Update the statement field\r\n         */\r\n        case types.UPDATE_STATEMENT:\r\n            return {\r\n                ...state,\r\n                intro: {\r\n                    ...state.intro,\r\n                    statement: action.statement\r\n                }\r\n            }\r\n        default:\r\n            throw new Error('Unexpected action');\r\n    }\r\n};\r\n\r\nexport {\r\n    initialState,\r\n    types,\r\n    reducer\r\n};","//React\r\nimport React, { createContext, useReducer } from \"react\";\r\n\r\n//Context\r\nimport { useActions } from \"./actions\";\r\nimport { reducer } from \"./reducers\";\r\n\r\n//Model\r\nimport { initialState } from './initialState';\r\n\r\nconst StoreContext = createContext(initialState);\r\n\r\nconst StoreProvider = ({ children }) => {\r\n  // Set up reducer with useReducer and our defined reducer, initialState from reducers.js\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  // Create an object of all our actions, handling special cases where a simple dispatch is too primitive\r\n  const actions = useActions(state, dispatch);\r\n\r\n  // Render state, dispatch and special case actions\r\n  return (\r\n    <StoreContext.Provider value={{ state, dispatch, actions }}>\r\n      {children}\r\n    </StoreContext.Provider>\r\n  );\r\n};\r\n\r\nexport { StoreContext, StoreProvider };\r\n","//React\r\nimport React, { useState, useContext, useEffect, ChangeEvent } from 'react';\r\n\r\n//Context\r\nimport { StoreContext } from '../../context/StoreContext';\r\nimport { types } from '../../context/reducers';\r\n\r\n//Material UI\r\nimport { Fab, TextField } from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\n//Model\r\nimport IntroModel from '../../models/IntroModel';\r\n\r\n//Style\r\nimport './IntroComponent.scss';\r\n\r\nexport interface IntroComponentProps {}\r\n\r\nconst IntroComponent = ( props: IntroComponentProps )=> { \r\n    const { state, dispatch, actions } = useContext(StoreContext);\r\n    const { position, name, statement }: IntroModel = state.intro;\r\n    const editMode: boolean = state.editMode;\r\n    \r\n    /**\r\n     * If editMode is off, ensure local edit state are turned off\r\n     */\r\n    useEffect( ()=>{ \r\n        if ( !editMode ){ \r\n            toggleStatementEditMode( false );\r\n            togglePositionEditMode( false );\r\n            toggleNameEditMode( false );\r\n        }\r\n    });\r\n    \r\n    //:ocal state\r\n    const [ statementEditMode, toggleStatementEditMode ] = useState( false );\r\n    const [ positionEditMode, togglePositionEditMode ] = useState( false );\r\n    const [ nameEditMode, toggleNameEditMode ] = useState( false );\r\n    \r\n    //Simple update handlers\r\n    const handleStatementChange = ( event:ChangeEvent<HTMLInputElement> ) => { \r\n        dispatch( \r\n            { \r\n                type: types.UPDATE_STATEMENT,\r\n                statement: event.target.value\r\n            }\r\n        );\r\n    };\r\n\r\n    const handlePositionChange = ( event:ChangeEvent<HTMLInputElement> ) => { \r\n        dispatch( \r\n            { \r\n                type: types.UPDATE_POSITION,\r\n                position: event.target.value\r\n            }\r\n        );\r\n    }\r\n\r\n    const handleNameChange = ( event:ChangeEvent<HTMLInputElement> ) => { \r\n        dispatch( \r\n            { \r\n                type: types.UPDATE_NAME,\r\n                name: event.target.value\r\n            }\r\n        );\r\n    }\r\n\r\n    return ( \r\n        <div className=\"intro\">\r\n            {/* Name \r\n                --------\r\n            */}\r\n            <div className={'name' + (nameEditMode && editMode ? ' extra-margin': '') + (editMode && !nameEditMode ? ' edit-outline':'')}>\r\n                { \r\n                    /*  Check Button\r\n                        ------------\r\n                    */\r\n                    nameEditMode && editMode?\r\n                    <Fab className=\"edit-icon\" color=\"secondary\" aria-label=\"Edit\" onClick={ ()=> toggleNameEditMode( false )} >\r\n                        <CheckIcon/>\r\n                    </Fab>:undefined\r\n                }\r\n                { nameEditMode && editMode ? \r\n                    /*  Name Input\r\n                        ---------------\r\n                    */\r\n                    <TextField\r\n                        label=\"Edit Name\"\r\n                        className=\"name-input\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        onChange={ handleNameChange }\r\n                        value={name}\r\n                    />: \r\n                    /*  Name View Mode\r\n                        ------------------\r\n                    */  \r\n                    <div onClick={ ()=> editMode && toggleNameEditMode( !nameEditMode )}>\r\n                        <h1 className=\"name\">{name}</h1>\r\n                    </div>\r\n                }\r\n            </div>            \r\n            {/* Position \r\n                --------\r\n            */}\r\n            <div className={'position' + (positionEditMode && editMode ? ' extra-margin': '') + (editMode && !positionEditMode ? ' edit-outline':'')}>\r\n                { \r\n                    /*  Check Button\r\n                        ------------\r\n                    */\r\n                    positionEditMode && editMode?\r\n                    <Fab className=\"edit-icon\" color=\"secondary\" aria-label=\"Edit\" onClick={ ()=> togglePositionEditMode( false )} >\r\n                        <CheckIcon/>\r\n                    </Fab>:undefined\r\n                }\r\n                { positionEditMode && editMode ? \r\n                    /*  Position Input\r\n                        ---------------\r\n                    */\r\n                    <TextField\r\n                        label=\"Edit Position\"\r\n                        className=\"position-input\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        onChange={ handlePositionChange }\r\n                        value={position}\r\n                    />: \r\n                    /*  Position View Mode\r\n                        ------------------\r\n                    */  \r\n                    <div onClick={ ()=> editMode && togglePositionEditMode( !positionEditMode )}>\r\n                        {position}\r\n                    </div>\r\n                }\r\n            </div>\r\n            {/* Statement \r\n                --------\r\n            */}\r\n            <div className={'statement' + (statementEditMode && editMode ? ' extra-margin': '') + (editMode && !statementEditMode ? ' edit-outline':'')}>\r\n                { \r\n                    /*  Check Button\r\n                        ------------\r\n                    */\r\n                    statementEditMode && editMode ?\r\n                    <Fab className=\"edit-icon\" aria-label=\"Edit\" onClick={ ()=> toggleStatementEditMode( false )} >\r\n                        <CheckIcon/>\r\n                    </Fab>:undefined\r\n                }\r\n                { statementEditMode && editMode ? \r\n                    /*  Statement Input\r\n                        ---------------\r\n                    */\r\n                    <TextField\r\n                        label=\"Edit Statement\"\r\n                        fullWidth\r\n                        multiline\r\n                        className=\"statement-input\"\r\n                        margin=\"normal\"\r\n                        style={{ margin: 8 }}\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        onChange={ handleStatementChange }\r\n                        value={statement}\r\n                    />: \r\n                    /*  Statement View Mode\r\n                        -------------------\r\n                    */\r\n                    <div onClick={ ()=> editMode && toggleStatementEditMode( !statementEditMode )}>\r\n                        {statement}\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IntroComponent;","// React\r\nimport React, { ChangeEvent, useState } from \"react\";\r\n\r\n// Material UI\r\nimport {\r\n  Fab,\r\n  FormControl,\r\n  InputLabel,\r\n  LinearProgress,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport Slider from \"@material-ui/lab/Slider\";\r\n\r\n// Material UI\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\n\r\n// FontAwesome\r\nimport * as brandIcons from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n// Model\r\nimport SkillModel from \"../../models/SkillModel\";\r\n\r\n// Style\r\nimport \"./Skill.style.scss\";\r\n\r\nexport interface ISkillProps extends SkillModel {\r\n    editMode: boolean;\r\n    handleDeleteSkill?: Function;\r\n    handleUpdateSkill: Function;\r\n    newFlag?: boolean;\r\n    onSelectSkill: Function;\r\n    selectedSkill: string;\r\n}\r\n\r\nconst SkillComponent = ( props: ISkillProps ) => {\r\n    const { icon,\r\n      editMode,\r\n      handleDeleteSkill,\r\n      handleUpdateSkill,\r\n      id,\r\n      interest,\r\n      lastUsed,\r\n      level,\r\n      name,\r\n      newFlag,\r\n      onSelectSkill,\r\n      selectedSkill,\r\n    } = props;\r\n\r\n    const [ nameEdit, handleEditName ] = useState( name );\r\n    const [ levelEdit, handleEditLevel ] = useState( level );\r\n    const [ interestEdit, handleEditInterest ] = useState( interest );\r\n    const [ lastUsedEdit, handleEditLastUsed ] = useState( lastUsed );\r\n    const [ iconEdit, handleEditIcon ] = useState( icon );\r\n\r\n    // Reassigning the icon set to allow for dynamic input of icon names\r\n    const brandIconSet: any = brandIcons;\r\n    const faIcon = \"fa\" + icon;\r\n\r\n\r\n    const generateIconOptions = ( ) => {\r\n      const generateItem = ( skillIcon: string ) => {\r\n        const iconName = skillIcon.replace( /^fa/, \"\" );\r\n        return (\r\n          <MenuItem value={iconName}>\r\n            { skillIcon !== \"\" ?\r\n              <FontAwesomeIcon className=\"small-skill-icon\" icon={brandIconSet[ `${skillIcon}` ]}/>\r\n              :\r\n              \"\"\r\n            } &nbsp;&nbsp;{iconName}\r\n          </MenuItem>\r\n        );\r\n      };\r\n\r\n      return Object.keys(brandIconSet).filter( (key) => key !== \"fab\" && key !== \"prefix\" ).map( generateItem );\r\n    };\r\n\r\n    const getAllEdits = (): SkillModel => {\r\n      return {\r\n          icon: iconEdit,\r\n          id,\r\n          interest: interestEdit,\r\n          lastUsed: lastUsedEdit,\r\n          level: Number(levelEdit),\r\n          name: nameEdit,\r\n      };\r\n    };\r\n\r\n\r\n    /**\r\n     * Reset the skill by loading in the local state with the props\r\n     */\r\n    const handleResetSkill = ( event?: React.MouseEvent<HTMLElement> ): void => {\r\n        if ( event ) { event.stopPropagation(); }\r\n\r\n        onSelectSkill( \"\" );\r\n        handleEditName( name );\r\n        handleEditLevel( level );\r\n        handleEditInterest( interest );\r\n        handleEditLastUsed( lastUsed );\r\n        handleEditIcon( icon );\r\n    };\r\n\r\n\r\n    /**\r\n     * Update Skill handler gathering edited data for the handleUpdateSkill callback\r\n     */\r\n    const handleUpdateSkillClicked = ( event: React.MouseEvent<HTMLElement> ): void => {\r\n        event.stopPropagation();\r\n        if ( editMode ) { handleUpdateSkill( getAllEdits() ); }\r\n        if ( newFlag ) { handleResetSkill(); }\r\n    };\r\n\r\n    return (\r\n        ( !newFlag || newFlag && editMode ) ?\r\n        (\r\n            <div className={\"skill-container\" + (editMode ? \" clickable\" : \"\")} onClick={() => editMode && onSelectSkill( selectedSkill !== id ? id : selectedSkill )}>\r\n                { newFlag ?\r\n                    <div className=\"add-button__container\">\r\n                        <AddIcon className=\"add-button\"/>\r\n                    </div> :\r\n\r\n\r\n                    /**\r\n                     * Static Preview of the skill\r\n                     * ---------------------------\r\n                     */\r\n                    [ <div className=\"icon-container\" key=\"iconContainer\">\r\n                        {icon !== \"\" && typeof brandIconSet[ faIcon ] !== \"undefined\" ?\r\n                          <FontAwesomeIcon className=\"skill-icon\" icon={brandIconSet[ faIcon ]}/>\r\n                          :\r\n                          \"\"\r\n                        }\r\n                    </div>,\r\n                    <div key=\"skillContainer\">\r\n                        <div className=\"skill-name\">{name}</div>\r\n                        <div className=\"skill-progress-container\">\r\n                            <div className=\"skill-row\">\r\n                              <span className=\"skill-label\">Skill </span>\r\n                              <div className=\"spacer\"/>\r\n                              {level}/10\r\n                            </div>\r\n                            <LinearProgress variant=\"determinate\" value={level / 10 * 100} />\r\n                            <div className=\"skill-row\">\r\n                              <span className=\"skill-label\">Interest </span>\r\n                              <div className=\"spacer\"/>\r\n                              {interest}\r\n                            </div>\r\n                            <div className=\"skill-row\">\r\n                              <span className=\"skill-label\">Last used </span>\r\n                              <div className=\"spacer\"/>\r\n                              {lastUsed}\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>]\r\n                }\r\n\r\n\r\n                { selectedSkill === id ?\r\n                <span className=\"input-container\">\r\n\r\n\r\n                  { \r\n                    /**\r\n                     * Icon Select for the skill\r\n                     * -------------------------\r\n                     */\r\n                  }\r\n                  <FormControl className=\"select-input\" >\r\n                    <InputLabel htmlFor=\"skill-icon\">Select Skills</InputLabel>\r\n                    <Select\r\n                      id=\"skill-icon\"\r\n                      value={iconEdit}\r\n                      onChange={(event: ChangeEvent<HTMLSelectElement>) => handleEditIcon(event.target.value)}\r\n                    >\r\n                      {generateIconOptions()}\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n\r\n                    {/**\r\n                    *   Skill Name Input\r\n                    *   ----------------\r\n                    */}\r\n                    <TextField\r\n                        label=\"Edit Skill Name\"\r\n                        className=\"text-input\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        onChange={(event: ChangeEvent<HTMLInputElement>) => handleEditName(event.target.value)}\r\n                        value={nameEdit}\r\n                    />\r\n\r\n\r\n                    {/**\r\n                    *   Skill Level Input\r\n                    *   -----------------\r\n                    */}\r\n                    <div className=\"skill-level-container\">\r\n                    <InputLabel className=\"skill-level-label\" htmlFor=\"skill-level\">Skill Level</InputLabel>\r\n                    <div className=\"skill-level-value\">{levelEdit}</div>\r\n                    <Slider\r\n                        id=\"skill-level\"\r\n                        value={levelEdit}\r\n                        onChange={(event: ChangeEvent<{}>, value: number ) => handleEditLevel( Number(value))}\r\n                        max={10}\r\n                        min={0.5}\r\n                        step={0.5}\r\n                    />\r\n                    </div>\r\n\r\n\r\n                    {/**\r\n                    *   Interest Select\r\n                    *   ---------------\r\n                    */}\r\n                    <FormControl className=\"select-input\">\r\n                    <InputLabel htmlFor=\"interest\">Interest</InputLabel>\r\n                    <Select\r\n                        value={interestEdit}\r\n                        onChange={(event: ChangeEvent<HTMLSelectElement>) => handleEditInterest( event.target.value)}\r\n                        inputProps={{\r\n                        name: \"interest\",\r\n                        id: \"interest\",\r\n                        }}\r\n                        >\r\n                        <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"Low\">Low</MenuItem>\r\n                        <MenuItem value=\"Moderate\">Moderate</MenuItem>\r\n                        <MenuItem value=\"High\">High</MenuItem>\r\n                        <MenuItem value=\"Highest\">Highest</MenuItem>\r\n                    </Select>\r\n                    </FormControl>\r\n                    {/**\r\n                    *   Last Used Select\r\n                    *   ----------------\r\n                    */}\r\n                    <FormControl className=\"select-input\">\r\n                    <InputLabel htmlFor=\"lastUsed\">Last Used</InputLabel>\r\n                    <Select\r\n                        value={lastUsedEdit}\r\n                        onChange={(event: ChangeEvent<HTMLSelectElement>) => handleEditLastUsed( event.target.value)}\r\n                        inputProps={{\r\n                        name: \"lastUsed\",\r\n                        id: \"lastUsed\",\r\n                        }}\r\n                        >\r\n                        <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"Current\">Current</MenuItem>\r\n                        <MenuItem value=\"This Month\">This Month</MenuItem>\r\n                        <MenuItem value=\"Last Month\">Last Month</MenuItem>\r\n                        <MenuItem value=\"This Year\">This Year</MenuItem>\r\n                        <MenuItem value=\"Before This Year\">Before This Year</MenuItem>\r\n                    </Select>\r\n                    </FormControl>\r\n                    {/**\r\n                    *   Action Buttons\r\n                    *   --------------\r\n                    */}\r\n                    <div className=\"action-button-container\">\r\n                    <Fab\r\n                        aria-label=\"Edit\"\r\n                        className=\"check-button action-buttons\"\r\n                        onClick={handleUpdateSkillClicked}\r\n                        size=\"small\"\r\n                    >\r\n                        <CheckIcon/>\r\n                    </Fab>\r\n                    <Fab size=\"small\" aria-label=\"Edit action-buttons\" onClick={handleResetSkill} >\r\n                        <ClearIcon/>\r\n                    </Fab>\r\n                    {\r\n                        newFlag ? undefined :\r\n                        <Fab size=\"small\" className=\"delete-button action-buttons\" color=\"secondary\" aria-label=\"Delete\" onClick={() => handleDeleteSkill && handleDeleteSkill(id)} >\r\n                        <DeleteForeverIcon/>\r\n                        </Fab>\r\n                    }\r\n                    </div>\r\n                </span> : undefined }\r\n\r\n            </div>\r\n        )\r\n        :\r\n        <div/>\r\n    );\r\n};\r\n\r\nexport default SkillComponent;\r\n","export default class SkillModel{ \r\n    name:  string ='';\r\n    level: number = 5;\r\n    interest: 'Low'|'Moderate'|'High'|'Highest'| string = 'High'; \r\n    lastUsed: 'Before This Year'|'This Year'|'Last Month'|'This Month'|'Current' | string = 'Current';\r\n    icon: string = '';\r\n    id?: string = \"new\";\r\n}","//React\r\nimport React, { useContext } from 'react';\r\n\r\n//Context\r\nimport { StoreContext } from '../../context/StoreContext';\r\nimport { types } from '../../context/reducers';\r\n\r\n//Component\r\nimport SkillComponent from './Skill.component';\r\n\r\n//Model\r\nimport SkillModel from '../../models/SkillModel';\r\n\r\n//Style\r\nimport './SkillsComponent.scss'\r\n\r\nexport interface SkillsProps{}\r\n\r\nconst SkillsComponent = ( props: SkillsProps ) => { \r\n    const { state, dispatch, actions } = useContext(StoreContext);\r\n    const selectedSkill: string =  state.selectedSkill;\r\n    const editMode: boolean = state.editMode;\r\n    const skills: SkillModel[] = state.skills;\r\n    const newSkill = new SkillModel();\r\n\r\n    const handleUpdateSkill = ( skill: SkillModel ):void => { \r\n        actions.updateSkill( skill );\r\n    }\r\n\r\n    const handleSelectSkill = ( id: string ):void =>{ \r\n        dispatch( { \r\n            type: types.SELECT_SKILL,\r\n            selectedSkill: id,\r\n        } );\r\n    }\r\n\r\n    return ( \r\n        <div className={'skills-container'} >\r\n            <SkillComponent {...newSkill} newFlag={true} editMode={editMode} selectedSkill={selectedSkill} key=\"new\" onSelectSkill={ handleSelectSkill}  handleUpdateSkill={ handleUpdateSkill }/>\r\n            { skills.map ( ( skill: SkillModel ) => \r\n                <SkillComponent {...skill}\r\n                  editMode={editMode}\r\n                  handleDeleteSkill={(id:string)=>actions.deleteSkill(id)}\r\n                  handleUpdateSkill={handleUpdateSkill}\r\n                  key={skill.id}\r\n                  onSelectSkill={handleSelectSkill}\r\n                  selectedSkill={selectedSkill}\r\n                /> ) \r\n            }\r\n        </div>\r\n    );  \r\n};\r\n\r\nexport default SkillsComponent;","//React\r\nimport React, { SyntheticEvent, useContext, useEffect } from 'react';\r\n\r\n//Context\r\nimport { StoreContext } from '../../../context/StoreContext';\r\n\r\n//Material UI\r\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from '@material-ui/core';\r\n\r\n//Styles\r\nimport './ExportDialogComponent.scss';\r\n\r\ndeclare var navigator: NavigatorModel;\r\n\r\nexport interface ExportDialogComponentModel{ \r\n  openState: boolean,\r\n  onClose: ( event:SyntheticEvent )=>void,\r\n}\r\n\r\ninterface NavigatorModel{ \r\n  clipboard: any;\r\n}\r\n\r\nexport const ExportDialogComponent = ( props: ExportDialogComponentModel ) => { \r\n  const { state, dispatch, actions } = useContext(StoreContext);\r\n  const { openState, onClose } = props;\r\n  \r\n  const exportPrefix = `\r\n  /**\r\n   * Replace the content of this file (/src/manifest.ts) with the manifest data copied by the export button\r\n   */\r\n  import ManifestModel from './models/ManifestModel';\r\n  \r\n  export const manifest:ManifestModel = `\r\n  const handleCopyEvent = () => { \r\n    navigator.clipboard.writeText(exportPrefix + JSON.stringify({intro: state.intro, skills: state.skills, experiences: state.experiences}, null, 4)).then(function() {\r\n      actions.snackbar( 'Manifest copied to clipboard' );\r\n    }, function() {\r\n      actions.snackbar( 'Manifest copy to clipboard failed, try manually copy and paste the manifest' );\r\n    });\r\n  }\r\n  return ( \r\n    <Dialog\r\n      className=\"export-dialog\"\r\n      open={openState}\r\n      onClose={onClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">Export Manifest Data</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n          <pre className=\"export-data\">{exportPrefix + JSON.stringify({intro: state.intro, skills: state.skills, experiences: state.experiences}, null, 4)}</pre>\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleCopyEvent} color=\"primary\">\r\n          Copy to Clipboard\r\n        </Button>\r\n        <Button onClick={onClose} color=\"primary\" autoFocus>\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}","// React\r\nimport React, { SyntheticEvent, useContext, useEffect, useState } from \"react\";\r\n\r\n// Material\r\nimport { AppBar, Button, Toolbar, Typography } from \"@material-ui/core\";\r\n\r\n// Material UI Icon\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport ExportIcon from \"@material-ui/icons/ImportExport\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\n\r\n// Component\r\nimport { ExportDialogComponent } from \"../dialogs/ExportDialogComponent/ExportDialogComponent\";\r\n\r\n// State\r\nimport { types } from \"../../context/reducers\";\r\nimport { StoreContext } from \"../../context/StoreContext\";\r\n\r\n// Style\r\nimport \"./Header.style.scss\";\r\n\r\nconst HeaderComponent = () => {\r\n    const { state, dispatch, actions } = useContext(StoreContext);\r\n\r\n    // local state\r\n    const [ exportModalState, toggleExportModal ] = useState( false );\r\n\r\n    /**\r\n     * Opening of the export dialog is handled as a local state\r\n     * @param event Object\r\n     */\r\n    const handleExportDialogClose = ( event: SyntheticEvent ): void => {\r\n      toggleExportModal( false );\r\n    };\r\n\r\n\r\n    /**\r\n     * Opens the export Dialog\r\n     *\r\n     */\r\n    const handleOpenExportDialog = () => toggleExportModal( !exportModalState );\r\n\r\n\r\n    /**\r\n     * Toggle global export mode\r\n     */\r\n    const handletoggleEditMode = (): void => {\r\n        dispatch( {\r\n            editMode: !state.editMode,\r\n            type: types.TOGGLE_EDIT,\r\n        } );\r\n    };\r\n\r\n\r\n    /**\r\n     * Remove toolbar for print out\r\n     */\r\n    const handlePrintModeClick = () => {\r\n      actions.handlePrintModeToggle( true );\r\n    };\r\n\r\n\r\n    return (\r\n        state.printMode ? <div/> :\r\n        (\r\n            <div className=\"header-container\" >\r\n                <AppBar position=\"static\" color=\"default\">\r\n                    <Toolbar className=\"toolbar\">\r\n                        <Typography variant=\"h6\" color=\"inherit\"/>\r\n                        <div className=\"spacer\" />\r\n\r\n\r\n                        {\r\n                            /**\r\n                             * Print Mode toggle\r\n                             * -----------------\r\n                             */\r\n                        }\r\n                        {/* <Button variant=\"contained\" onClick={ handlePrintModeClick }>\r\n                            <PrintIcon/> Hide Toolbar for Print\r\n                        </Button> */}\r\n\r\n\r\n                        {\r\n                            /**\r\n                             * Generate PDF Button\r\n                             */\r\n                        }\r\n                        {/* <Button className=\"right-menu-button\"variant=\"contained\" onClick={ actions.handlePrintPdf }>\r\n                            <DescriptionIcon/> Generate PDF (Has Issues)\r\n                        </Button> */}\r\n\r\n\r\n                        {\r\n                            /**\r\n                             * Export Data Button\r\n                             * ------------------\r\n                             */\r\n                        }\r\n                        <Button\r\n                            className=\"right-menu-button\"\r\n                            variant=\"contained\"\r\n                            onClick={handleOpenExportDialog}\r\n                        >\r\n                            <ExportIcon/> Export Data\r\n                        </Button>\r\n\r\n\r\n                        {\r\n                            /**\r\n                             * Toggle for switching Edit and View Mode\r\n                             * ---------------------------------------\r\n                             */\r\n                        }\r\n                        <Button className=\"right-menu-button\" variant=\"contained\" onClick={handletoggleEditMode}>\r\n                            {state.editMode ?\r\n                                [\"Edit Mode \", <EditIcon key=\"editMode\" className=\"mode-icon\"/>]\r\n                                :\r\n                                [\"View Mode\", <VisibilityIcon key=\"visibilityIcon\" className=\"mode-icon\"/>]}\r\n                        </Button>\r\n\r\n\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <ExportDialogComponent onClose={handleExportDialogClose} openState={exportModalState} />\r\n            </div>\r\n        )\r\n    );\r\n};\r\n\r\nexport default HeaderComponent;\r\n","// React\r\nimport React, { ChangeEvent } from \"react\";\r\n\r\n// Material UI\r\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\n// Materion UI Icon\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\n\r\n// FontAwesome\r\nimport * as brandIcons from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n// Model\r\nimport SkillModel from \"../../models/SkillModel\";\r\n\r\n// Style\r\nimport \"./Experience.style.scss\";\r\n\r\nexport interface IBulletPointSkillProps {\r\n  bulletIndex: number;\r\n  onDeleteSkill: ( index: number, skillIndex: number ) => void;\r\n  onUpdateSkill: ( skillName: string, index: number, skillIndex: number ) => void;\r\n  skillIndex: number;\r\n  skillName: string;\r\n  stateSkills: SkillModel[];\r\n}\r\n\r\nconst BulletPointSkill = ( props: IBulletPointSkillProps ) => {\r\n\r\n  // Reassigning the icon set to allow for dynamic input of icon names\r\n  const brandIconSet: any = brandIcons;\r\n\r\n  const  {\r\n    bulletIndex,\r\n    onDeleteSkill,\r\n    onUpdateSkill,\r\n    skillIndex,\r\n    skillName,\r\n    stateSkills,\r\n  } = props;\r\n\r\n\r\n  /**\r\n   * Updates a specific skill\r\n   *\r\n   * @param {number}                          skillIndex  Index of the skill\r\n   * @param {ChangeEvent<HTMLSelectElement>}  event\r\n   */\r\n  const handleUpdateSkill = ( iSkillIndex: number, event: ChangeEvent<HTMLSelectElement>): void => {\r\n    onUpdateSkill( event.target.value, bulletIndex, iSkillIndex );\r\n  };\r\n\r\n  const handleDeleteSkill = (): void => onDeleteSkill( bulletIndex, skillIndex );\r\n\r\n  return (\r\n    <div>\r\n\r\n\r\n      {\r\n        /**\r\n         * Skill Select\r\n         * ------------\r\n         */\r\n      }\r\n      <FormControl className=\"select-input\" >\r\n      <InputLabel htmlFor=\"interest\">Select Skills</InputLabel>\r\n      <Select\r\n        value={skillName}\r\n        onChange={handleUpdateSkill.bind( {}, skillIndex )}\r\n        inputProps={{\r\n          id: \"skills\",\r\n          name: \"skills\",\r\n        }}\r\n      >\r\n\r\n\r\n        {\r\n          /**\r\n           * Select option for skills\r\n           * ------------------------\r\n           */\r\n        }\r\n        <MenuItem value=\"\">New Skill</MenuItem>\r\n        { stateSkills.map( ( skill: SkillModel ) => {\r\n          return (\r\n            <MenuItem key={skill.name} value={skill.name}>\r\n              { skill.icon !== \"\" ?\r\n                <FontAwesomeIcon className=\"small-skill-icon\" icon={brandIconSet[ `fa${skill.icon}` ]}/>\r\n                :\r\n                \"\"\r\n              } &nbsp;{skill.name}\r\n            </MenuItem>\r\n          );\r\n        } ) }\r\n\r\n\r\n      </Select>\r\n      </FormControl>\r\n\r\n\r\n      {\r\n         /**\r\n          * Remove Skill Button\r\n          * -------------------\r\n          */\r\n      }\r\n      <IconButton className=\"remove-skill-button\" aria-label=\"Remove Skill\" onClick={handleDeleteSkill}>\r\n        <ClearIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BulletPointSkill;\r\n","// React\r\nimport React, { ChangeEvent } from \"react\";\r\n\r\n// Material UI\r\nimport { TextField } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\n// Materion UI Icon\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\n\r\n// Component\r\nimport BulletPointSkill from \"./BulletPointskill.component\";\r\n\r\n// Model\r\nimport SkillModel from \"../../models/SkillModel\";\r\n\r\n// Style\r\nimport \"./Experience.style.scss\";\r\n\r\nexport interface IBulletPointProps {\r\n  onAddNewSkill: ( index: number ) => void;\r\n  onBulletPointChange: ( index: number, value: string ) => void;\r\n  onDeleteBulletPoint: ( id: number ) => void;\r\n  onDeleteSkill: ( index: number, skillIndex: number ) => void;\r\n  onUpdateSkill: ( skillName: string, index: number, skillIndex: number ) => void;\r\n  index: number;\r\n  point: string;\r\n  skills: string[];\r\n  stateSkills: SkillModel[];\r\n}\r\n\r\nconst BulletPoint = ( props: IBulletPointProps ) => {\r\n\r\n\r\n  const  {\r\n    onAddNewSkill,\r\n    onBulletPointChange,\r\n    onDeleteBulletPoint,\r\n    onDeleteSkill,\r\n    onUpdateSkill,\r\n    index,\r\n    point,\r\n    skills,\r\n    stateSkills,\r\n  } = props;\r\n\r\n\r\n  /**\r\n   * Adds a new skill to the bullet point\r\n   */\r\n  const handleAddNewSkill = ():void => onAddNewSkill( index );\r\n\r\n\r\n  /**\r\n   * Update bullet point text statement\r\n   *\r\n   * @param {ChangeEvent<HTMLInputElement>} event\r\n   */\r\n  const handleBulletPointTextChange = ( event: ChangeEvent<HTMLInputElement> ): void => {\r\n    onBulletPointChange( index, event.target.value );\r\n  };\r\n\r\n\r\n  /**\r\n   * Deletes the bullet point\r\n   */\r\n  const handleDeleteClick = (): void => onDeleteBulletPoint( index );\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"bulletpoint-row\">\r\n\r\n\r\n        {\r\n          /**\r\n           * Bullet Point Text Statement Input\r\n           * ---------------------------------\r\n           */\r\n        }\r\n        <TextField\r\n          label={\"Edit Point \" + (index + 1)}\r\n          className=\"bullet-input fullwidth-input\"\r\n          InputLabelProps={{\r\n              shrink: true,\r\n          }}\r\n          onChange={handleBulletPointTextChange}\r\n          value={point}\r\n        />\r\n\r\n\r\n        {\r\n          /**\r\n           * Delete Bullet point Button\r\n           * --------------------------\r\n           */\r\n        }\r\n        <div>\r\n          <IconButton aria-label=\"Delete\" onClick={handleDeleteClick}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </div>\r\n\r\n\r\n      </div>{/** End of bulletpoint-row */}\r\n\r\n\r\n      <div className=\"skills-row\">\r\n\r\n\r\n        {\r\n          /**\r\n           * Add Skill Button\r\n           * ----------------\r\n           */\r\n        }\r\n        <div>\r\n          <IconButton className=\"add-skill-button\" aria-label=\"add\" onClick={handleAddNewSkill}>\r\n            <AddIcon />\r\n          </IconButton>\r\n        </div>\r\n\r\n\r\n        {\r\n          /**\r\n           * List of skills\r\n           * --------------\r\n           */\r\n        }\r\n        <div className=\"skills-container\">\r\n          {\r\n            skills.map( ( skillName: string, skillIndex: number ) => {\r\n              return (\r\n                <BulletPointSkill\r\n                  key={skillIndex}\r\n                  bulletIndex={index}\r\n                  onDeleteSkill={onDeleteSkill}\r\n                  onUpdateSkill={onUpdateSkill}\r\n                  skillIndex={skillIndex}\r\n                  skillName={skillName}\r\n                  stateSkills={stateSkills}\r\n                />\r\n              );\r\n            } )\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BulletPoint;\r\n","import uuid from 'uuid/v4';\r\n\r\nexport class BulletModel { \r\n    point: string = 'point';\r\n    skills: string[] = [];\r\n}\r\n\r\nexport default class ExperienceModel{ \r\n    id?: string = 'new';\r\n    position:  string =\"Developer\";\r\n    company: string =\"Company\";\r\n    bulletPoints: BulletModel[] = []; \r\n    date: string = \"XXXX-XXXX\";\r\n}","// React\r\nimport React, { ChangeEvent, useEffect, useState } from \"react\";\r\n\r\n// Material UI\r\nimport { Fab, TextField } from \"@material-ui/core\";\r\n\r\n// Materion UI Icon\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\n\r\n// FontAwesome\r\nimport * as brandIcons from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n// Component\r\nimport BulletPoint from \"./BulletPoint.component\";\r\n\r\n// Model\r\nimport ExperienceModel, { BulletModel } from \"../../models/ExperienceModel\";\r\nimport SkillModel from \"../../models/SkillModel\";\r\n\r\n// Style\r\nimport \"./Experience.style.scss\";\r\n\r\nexport interface IExperienceComponentProps extends ExperienceModel {\r\n  editMode: boolean;\r\n  handleDeleteExperience: Function;\r\n  handleSelectExperience: Function;\r\n  handleUpdateExperience: Function;\r\n  selectedExperience: string;\r\n  skills: SkillModel[];\r\n}\r\n\r\nconst ExperienceComponent = ( props: IExperienceComponentProps ) => {\r\n    const {\r\n      company,\r\n      bulletPoints,\r\n      date,\r\n      editMode,\r\n      handleDeleteExperience,\r\n      handleUpdateExperience,\r\n      handleSelectExperience,\r\n      id,\r\n      position,\r\n      selectedExperience,\r\n      skills,\r\n    } = props;\r\n\r\n    // Reassigning the icon set to allow for dynamic input of icon names\r\n    const brandIconSet: any = brandIcons;\r\n\r\n    // localstate\r\n    const [ companyEdit, handleEditCompany ] = useState( company );\r\n    const [ dateEdit, handleEditDate ] = useState( date.toUpperCase() );\r\n    const [ positionEdit, handleEditPosition ] = useState( position );\r\n    const [ bulletPointsEdit, handleEditBulletPoints ] = useState( bulletPoints );\r\n\r\n    const skillsMapByName: { [key: string]: SkillModel} = skills.reduce( ( result: object, skill ) => {\r\n      return {\r\n        ... result,\r\n        [skill.name]: skill,\r\n      };\r\n    }, {} );\r\n\r\n    useEffect( () => {\r\n        handleEditBulletPoints(bulletPoints);\r\n    }, [bulletPoints]);\r\n\r\n    const getAllEdits = () => {\r\n      return {\r\n        bulletPoints: bulletPointsEdit,\r\n        company: companyEdit,\r\n        date: dateEdit,\r\n        id,\r\n        position: positionEdit,\r\n      };\r\n    };\r\n\r\n    const handleAddNewBulletPoint = () => {\r\n      handleUpdateExperience( {\r\n        ...getAllEdits(),\r\n        bulletPoints: [ ...bulletPointsEdit, new BulletModel() ],\r\n      }, id );\r\n    };\r\n\r\n\r\n    const handleAddNewSkill = ( index: number ): void => {\r\n      const newBulletPoints = [ ...bulletPointsEdit ];\r\n      newBulletPoints[ index ] = {\r\n        ...newBulletPoints[ index ],\r\n        skills: [ ...newBulletPoints[ index ].skills, \"\" ],\r\n      };\r\n\r\n      handleUpdateExperience( {\r\n        ...getAllEdits(),\r\n        bulletPoints: newBulletPoints,\r\n      }, id );\r\n    };\r\n\r\n\r\n    const handleUpdateSkill = ( skillName: string, index: number, skillIndex: number ): void => {\r\n      const newBulletPoints = [ ...bulletPointsEdit ];\r\n      newBulletPoints[ index ].skills[ skillIndex ] = skillName;\r\n\r\n      handleUpdateExperience( {\r\n        ...getAllEdits(),\r\n        bulletPoints: newBulletPoints,\r\n      }, id );\r\n    };\r\n\r\n\r\n    const handleDeleteSkill = ( index: number, skillIndex: number ): void => {\r\n      const newBulletPoints = [ ...bulletPointsEdit ];\r\n      newBulletPoints[ index ].skills = newBulletPoints[ index ].skills.filter(\r\n        ( skill: string, skillIndexInArray: number ) => skillIndex !== skillIndexInArray,\r\n      );\r\n\r\n      handleUpdateExperience( {\r\n        ...getAllEdits(),\r\n        bulletPoints: newBulletPoints,\r\n      }, id );\r\n    };\r\n\r\n\r\n    const handleDeleteBulletPoint = ( _id: number ): void => {\r\n      const newBulletPoints = bulletPoints.filter( ( item: BulletModel, index: number ) => _id !== index );\r\n      handleUpdateExperience( {\r\n        ...getAllEdits(),\r\n        bulletPoints: newBulletPoints,\r\n      }, id );\r\n    };\r\n\r\n\r\n    /**\r\n     * Clicking on the non edit experience, will trigger editing when edit mode is on\r\n     */\r\n    const handleExperienceClicked = (): void => {\r\n      if ( editMode ) { handleSelectExperience(id); }\r\n    };\r\n\r\n\r\n    /**\r\n     * Reset the skill by loading in the local state with the props\r\n     */\r\n    const handleResetExperience = ( event?: React.MouseEvent<HTMLElement> ): void => {\r\n      if ( event ) { event.stopPropagation(); }\r\n\r\n      handleSelectExperience( \"\" );\r\n      handleEditCompany( company );\r\n      handleEditDate( date.toUpperCase() );\r\n      handleEditPosition( position );\r\n      handleEditBulletPoints( bulletPoints );\r\n  };\r\n\r\n\r\n  /**\r\n   * Update Experience handler gathering edited data for the handleUpdateExperience callback\r\n   */\r\n    const _handleUpdateExperience = ( event: React.MouseEvent<HTMLElement> ): void => {\r\n      event.stopPropagation();\r\n      if ( editMode ) { handleUpdateExperience( getAllEdits() ); }\r\n  };\r\n\r\n\r\n    /**\r\n     * Updates a single bullet in the list of bullets\r\n     */\r\n    const handleEditBulletPoint = ( index: number, value: string ): void => {\r\n      const newBulletPoints = [ ...bulletPointsEdit ];\r\n      newBulletPoints[ index ] = {\r\n        point: value,\r\n        skills: newBulletPoints[ index ].skills,\r\n      };\r\n      handleEditBulletPoints( newBulletPoints );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        { editMode && selectedExperience === id ?\r\n        <div className=\"edit-container\">\r\n          <div className=\"two-input-container fullwidth-input\">\r\n\r\n\r\n            {\r\n              /**\r\n               * Company Text Input Field\r\n               * ------------------------\r\n               */\r\n            }\r\n            <TextField\r\n                label=\"Edit Company\"\r\n                className=\"company-input company\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                onChange={( event: ChangeEvent<HTMLInputElement> ) => handleEditCompany( event.target.value )}\r\n                value={companyEdit}\r\n            />\r\n\r\n\r\n            {\r\n              /**\r\n               * Date Text Input Field\r\n               * ---------------------\r\n               */\r\n            }\r\n            <TextField\r\n                label=\"Edit Experinence Date\"\r\n                className=\"date-input\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                onChange={( event: ChangeEvent<HTMLInputElement> ) => handleEditDate( event.target.value.toUpperCase() )}\r\n                value={dateEdit}\r\n            />\r\n\r\n\r\n          </div>\r\n\r\n\r\n          {\r\n            /**\r\n             * Position Text Input Field\r\n             * -------------------------\r\n             */\r\n          }\r\n          <TextField\r\n              label=\"Edit Position\"\r\n              className=\"position-input fullwidth-input\"\r\n              InputLabelProps={{\r\n                  shrink: true,\r\n              }}\r\n              onChange={( event: ChangeEvent<HTMLInputElement> ) => handleEditPosition( event.target.value )}\r\n              value={positionEdit}\r\n          />\r\n\r\n\r\n            {\r\n              /**\r\n               * Bullet Point Custom Input\r\n               * -------------------------\r\n               */\r\n            }\r\n            <div className=\"bulletpoints-container\">\r\n              <label className=\"bulletpoints-label\">Bullet Points</label>\r\n              { bulletPointsEdit.map(\r\n                ( point: BulletModel, index: number ) => {\r\n                  return (\r\n                    <BulletPoint\r\n                      key={index}\r\n                      {...point}\r\n                      index={index}\r\n                      onAddNewSkill={handleAddNewSkill}\r\n                      onBulletPointChange={handleEditBulletPoint}\r\n                      onDeleteBulletPoint={handleDeleteBulletPoint}\r\n                      onDeleteSkill={handleDeleteSkill}\r\n                      onUpdateSkill={handleUpdateSkill}\r\n                      stateSkills={skills}\r\n                    />\r\n                  );\r\n                },\r\n              ) }\r\n\r\n\r\n              {\r\n                 /**\r\n                  * Add New Bullet Point Button\r\n                  * ---------------------------\r\n                  */\r\n              }\r\n              <Fab className=\"add-bullet-button\" variant=\"extended\" color=\"inherit\" aria-label=\"Add\" onClick={handleAddNewBulletPoint}>\r\n                <AddIcon/> &nbsp;\r\n                Add New Bullet Point\r\n              </Fab>\r\n            </div>\r\n\r\n\r\n            {\r\n              /**\r\n               * Action Buttons\r\n               * --------------\r\n               */\r\n            }\r\n            <div className=\"action-button-container\">\r\n              <Fab className=\"check-button__no-margin\" aria-label=\"Save\" onClick={_handleUpdateExperience} >\r\n                  <CheckIcon/>\r\n              </Fab>\r\n              <Fab aria-label=\"Clear\" onClick={handleResetExperience} >\r\n                  <ClearIcon/>\r\n              </Fab>\r\n              <Fab color=\"secondary\" aria-label=\"Delete\" onClick={() => handleDeleteExperience(id)} >\r\n                  <DeleteForeverIcon/>\r\n              </Fab>\r\n            </div>\r\n        </div>\r\n        :\r\n        /**\r\n         * Non Edit Mode\r\n         * -------------\r\n         */\r\n        <div className={\"exp\" + (editMode ? \" edit-outline clickable\" : \"\")} onClick={handleExperienceClicked}>\r\n            <div className=\"line1\">\r\n                <div className=\"company\">{company}</div>\r\n                <div className=\"date\">{date.toUpperCase()}</div>\r\n            </div>\r\n            <h2>{position}</h2>\r\n            {bulletPoints.map( ( point: BulletModel,\r\n                                 index: number ) =>\r\n                <div key={index}>\r\n                  <div key={index} className=\"bullet\"><AddIcon className=\"bullet-icon\"/> {point.point}</div>\r\n                  <div className=\"nonedit-skill-list\">\r\n                    { point.skills.map( ( skillName: string, index: number ) => {\r\n                      const skillObject: SkillModel = skillsMapByName[skillName];\r\n                      return (\r\n                        <div className=\"nonedit-skill-item\" key={index}>{ skillObject && skillObject.icon !== \"\" ?\r\n                          <FontAwesomeIcon className=\"small-skill-icon\" icon={brandIconSet[ `fa${skillObject.icon}` ]}/> : \"\"}\r\n                          &nbsp;{skillObject && skillObject.name}\r\n                        </div>);\r\n                    } ) }\r\n                  </div>\r\n                </div>,\r\n\r\n              ) }\r\n        </div>\r\n        }\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default ExperienceComponent;\r\n","// React\r\nimport React, { useContext } from \"react\";\r\n\r\n// Material UI\r\nimport { Fab } from \"@material-ui/core\";\r\n\r\n// Material UI Icon\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\n// Component\r\nimport ExperienceComponent from \"./Experience.component\";\r\n\r\n// Context\r\nimport { StoreContext } from \"../../context/StoreContext\";\r\n\r\n// Model\r\nimport { types } from \"../../context/reducers\";\r\nimport ExperienceModel from \"../../models/ExperienceModel\";\r\nimport ExperiencesModel from \"../../models/ExperienceModel\";\r\n\r\n// Style\r\nimport \"./Experiences.style.scss\";\r\n\r\nconst ExperiencesComponent = ( ) => {\r\n\r\n    const { state, dispatch, actions } = useContext(StoreContext);\r\n    const { editMode, selectedExperience, skills } = state;\r\n    const experiences: ExperiencesModel[] = state.experiences;\r\n\r\n\r\n    /**\r\n     * Adds a new experience\r\n     */\r\n    const handleAddNewExperience = (): void => handleUpdateExperience( new ExperienceModel() );\r\n\r\n\r\n    /**\r\n     * Deletes an existing experience\r\n     *\r\n     * @param {string} id Unique Id for the experience\r\n     */\r\n    const handleDeleteExperience = ( id: string ): void => actions.deleteExperience(id);\r\n\r\n\r\n    /**\r\n     * Handle update for an exisiting experience\r\n     */\r\n    const handleUpdateExperience = ( experience: ExperienceModel, selectedExp?: string ): void => {\r\n        actions.updateExperience( experience, selectedExp );\r\n    };\r\n\r\n\r\n    /**\r\n     * Handle selection of a experience during edit mode\r\n     * @param id\r\n     */\r\n    const handleSelectExperience = ( id: string ): void => {\r\n        dispatch( {\r\n            selectedExperience: id,\r\n            type: types.SELECT_EXPERIENCE,\r\n        } );\r\n    };\r\n\r\n\r\n    return (\r\n      <div>\r\n\r\n\r\n        {\r\n          /**\r\n           * Map of all current experinences\r\n           * -------------------------------\r\n           */\r\n        }\r\n        {  experiences.map( ( experience: ExperiencesModel ) =>\r\n          <ExperienceComponent\r\n            {...experience}\r\n            key={experience.id}\r\n            editMode={editMode}\r\n            handleDeleteExperience={handleDeleteExperience}\r\n            handleUpdateExperience={handleUpdateExperience}\r\n            handleSelectExperience={handleSelectExperience}\r\n            selectedExperience={selectedExperience}\r\n            skills={skills}\r\n          /> ) }\r\n\r\n\r\n        {\r\n          /**\r\n           * Add Experience Button\r\n           * ---------------------\r\n           */\r\n        }\r\n        { editMode ?\r\n          <Fab\r\n            className=\"add-exp-button\"\r\n            variant=\"extended\"\r\n            color=\"inherit\"\r\n            aria-label=\"Add\"\r\n            onClick={handleAddNewExperience}\r\n          >\r\n            <AddIcon/> &nbsp;\r\n            Add New Experience\r\n          </Fab>\r\n          :\r\n          undefined }\r\n\r\n\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default ExperiencesComponent;\r\n","//React\r\nimport React, { useContext } from 'react';\r\n\r\n//Context\r\nimport { StoreContext } from '../../context/StoreContext';\r\nimport { types } from '../../context/reducers';\r\n\r\n//Material UI\r\nimport { IconButton, Snackbar } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n//Model\r\nimport GenericSnackbarModel from '../../models/GenericSnackbarModel';\r\n\r\nconst GenericSnackbarComponent = () => { \r\n    const { state, dispatch, actions } = useContext( StoreContext );\r\n    const genericSnackbar: GenericSnackbarModel = state.genericSnackbar;\r\n    const { open, hideDuration, message } = genericSnackbar;\r\n\r\n\r\n\r\n    /**\r\n     * Close the generic snackbar\r\n     */\r\n    const handleClose = ():void => { \r\n      dispatch({ \r\n        type: types.HIDE_GENERIC_SNACKBAR\r\n      })\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={open}\r\n          autoHideDuration={hideDuration}\r\n          onClose={handleClose}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\">{message}</span>}\r\n          action={[\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"Close\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>,\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default GenericSnackbarComponent;","//React\r\nimport React, { Component, useState, useContext } from 'react';\r\n\r\n//Component\r\nimport IntroComponent from './components/IntroComponent/IntroComponent';\r\nimport SkillsComponent from './components/SkillsComponent/SkillsComponent';\r\nimport HeaderComponent from './components/HeaderComponent/Header.component';\r\nimport ExperiencesComponent from './components/ExperiencesComponent/Experiences.component';\r\nimport GenericSnackbarComponent from './components/snackbars/GenericSnackbarComponent';\r\n\r\n//Style\r\nimport './App.scss';\r\nimport { StoreContext } from './context/StoreContext';\r\n\r\nexport interface AppProps {}\r\nconst App = ( props: AppProps ) => {\r\n\r\n  const { state, dispatch, actions } = useContext( StoreContext );\r\n\r\n  /**\r\n   * Readded toolbar clicking in the window after printout\r\n   */\r\n  const handlePrintModeClick = () => { \r\n    actions.handlePrintModeToggle( false );\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <HeaderComponent />\r\n      <div className=\"content-container\" onClick={ handlePrintModeClick }>\r\n        <div className=\"content\">\r\n          <IntroComponent/>\r\n          <SkillsComponent/>\r\n          <ExperiencesComponent/>\r\n        </div>\r\n      </div>\r\n      <GenericSnackbarComponent/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","//React\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n//Context\r\nimport { StoreProvider } from './context/StoreContext';\r\n\r\n//Component\r\nimport App from './App';\r\n\r\n//FontAwesome\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faStroopwafel } from '@fortawesome/free-solid-svg-icons'\r\n\r\n//Style\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <StoreProvider>\r\n        <App />\r\n    </StoreProvider>, \r\n    document.getElementById('root')\r\n);\r\n\r\nlibrary.add(faStroopwafel)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","//Context\r\nimport { types } from \"./reducers\";\r\n\r\n//Model\r\nimport SkillModel from \"../models/SkillModel\";\r\nimport { StateModel } from \"../models/StateModel\";\r\n\r\n//Utility\r\nimport uuid from 'uuid/v4';\r\nimport ExperienceModel from \"../models/ExperienceModel\";\r\ndeclare const html2pdf: Function;\r\n\r\nexport const useActions = (state:StateModel, dispatch: Function) => {\r\n\r\n  /**\r\n   * Search and deletes a experience with the associated id\r\n   */\r\n  function deleteExperience( id: string ){ \r\n\r\n    const newExperiences = state.experiences.filter( ( experience: ExperienceModel ) => { \r\n      return experience.id !== id;\r\n    } );\r\n    \r\n    dispatch( { \r\n        type: types.UPDATE_EXPERIENCE, \r\n        experiences: newExperiences \r\n    } )\r\n  }\r\n\r\n\r\n  /**\r\n   * Search and deletes a skill with the associated id\r\n   */\r\n  function deleteSkill( id: string ){ \r\n\r\n    const newSkills = state.skills.filter( ( experience: SkillModel ) => { \r\n      return experience.id !== id;\r\n    } );\r\n    \r\n    dispatch( { \r\n        type: types.UPDATE_SKILL, \r\n        skills: newSkills \r\n    } )\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Hides toolbar for print, clicking on the toolback again should return the page to its initial state\r\n   */\r\n  const handlePrintModeToggle = ( printMode: boolean ) => { \r\n    if ( !printMode ){ \r\n      dispatch( { \r\n        type: types.TOGGLE_PRINT,\r\n        printMode: false\r\n      } )\r\n      //Adjust the margin for print\r\n      const $content:HTMLElement|null = document.querySelector( \".content\" );\r\n      $content && ( $content.style.margin = 'initial' );\r\n    } else { \r\n      dispatch( { \r\n        type: types.TOGGLE_PRINT,\r\n        printMode: true\r\n      } )\r\n      //Adjust the margin for print\r\n      const $content:HTMLElement|null = document.querySelector( \".content\" );\r\n      $content && ( $content.style.margin = '-4rem' );\r\n      snackbar( 'Click anywhere on the screen to turn off print mode' );\r\n    }\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * Prints the resume to pdf, has display issues\r\n   */\r\n  const handlePrintPdf = () =>{ \r\n    \r\n    //Hide the SVG icons that cannot be render correctly\r\n    document.querySelectorAll( \".skill-icon\" ).forEach( (icon:any) => { \r\n      icon.style.display = 'none';\r\n    } );\r\n\r\n    //Move the margin up to remove the empty space for the pdf\r\n    const $content:HTMLElement|null = document.querySelector( \".content\" );\r\n    $content && ($content.style.margin = '-50px 0 0' );\r\n\r\n    html2pdf( document.querySelector( '.content'), {\r\n      margin: 0.4,\r\n      filename: `Resume.pdf`,\r\n      image: {\r\n        type: 'jpeg',\r\n        quality: 0.90\r\n      },\r\n      enableLinks: false,\r\n      html2canvas: {\r\n        onrendered: function ( ){ \r\n          //Return the svg icons after pdf generation\r\n          document.querySelectorAll( \".skill-icon\" ).forEach( (icon:any) => { \r\n            icon.style.display = 'initial';\r\n          } );\r\n\r\n          //Return the top margin after pdf generation\r\n          const $content:HTMLElement|null = document.querySelector( \".content\" );\r\n          $content && ( $content.style.margin = 'initial' );\r\n        },\r\n        dpi: 600,\r\n        letterRendering: false,\r\n        width: 730,\r\n      },\r\n      jsPDF: {\r\n        unit: 'in',\r\n        format: 'letter',\r\n        orientation: 'portrait'\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Search and updates an existing experience or creates a new experience if the id is 'new'\r\n   */\r\n  function updateExperience( experience: ExperienceModel, selectedExperience?: string ){ \r\n    let newExperiences;\r\n    //Special handler for new experience\r\n    if ( experience.id === 'new'){ \r\n      newExperiences = [\r\n        ...state.experiences,\r\n        { \r\n          ...experience,\r\n          id: uuid()\r\n        }\r\n      ];\r\n    } else {\r\n      newExperiences = state.experiences.reduce( ( result: ExperienceModel[], _experience: ExperienceModel ) => {\r\n        const updateExperience: ExperienceModel =  (_experience.id === experience.id )? experience : _experience;\r\n        return [\r\n          ...result,\r\n          updateExperience\r\n        ] \r\n      }, [] );\r\n    }\r\n    dispatch( { \r\n      type: types.UPDATE_EXPERIENCE, \r\n      experiences: newExperiences, \r\n      selectedExperience: selectedExperience || undefined,\r\n    } )\r\n  }\r\n\r\n\r\n  /**\r\n   * Search and updates an existing skill or creates a new skill if the id is 'new'\r\n   */\r\n  function updateSkill( skill: SkillModel ){ \r\n    let newSkills;\r\n    //Special handler for new skill\r\n    if ( skill.id === 'new'){ \r\n      newSkills = [\r\n        ...state.skills,\r\n        { \r\n          ...skill,\r\n          id: uuid()\r\n        }\r\n      ];\r\n    } else {\r\n      newSkills = state.skills.reduce( ( result: SkillModel[], _skill: SkillModel ) => {\r\n        const updateSkill: SkillModel =  (_skill.id === skill.id )? skill : _skill;\r\n        return [\r\n          ...result,\r\n          updateSkill\r\n        ] \r\n      }, [] );      \r\n    }\r\n    dispatch( { \r\n        type: types.UPDATE_SKILL, \r\n        skills: newSkills \r\n    } )\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Utility function to generate generic snackbar\r\n   */\r\n  function snackbar( message:string, hideDuration?: number){ \r\n    dispatch( { \r\n      type: types.SHOW_GENERIC_SNACKBAR,\r\n      hideDuration,\r\n      message,\r\n    } )\r\n  }\r\n\r\n  return {\r\n    deleteExperience,\r\n    deleteSkill,\r\n    handlePrintModeToggle,\r\n    handlePrintPdf,\r\n    snackbar,\r\n    updateExperience,\r\n    updateSkill,\r\n  };\r\n};\r\n"],"sourceRoot":""}